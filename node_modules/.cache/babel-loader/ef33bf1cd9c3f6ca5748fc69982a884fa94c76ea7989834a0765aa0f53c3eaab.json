{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/host/Homestay.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { supabase } from \"../../utils/supabaseClient\";\n// import Sidebar from \"../../components/Sidebar\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// const dzongkhags = [\n//   \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \n//   \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n//   \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n// ];\n\n// function Homestay() {\n//   const [user, setUser] = useState(null);\n//   const [homestay, setHomestay] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     facilities: \"\",\n//     numbedrooms: \"\",\n//     numbeds: \"\",\n//     availabilitydate: [],\n//     location: \"\",\n//     googlemapurl: \"\",\n//     images: [],\n//     pricepernight: \"\",\n//   });\n//   const [imageFiles, setImageFiles] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchUser() {\n//       const { data, error } = await supabase.auth.getUser();\n//       if (error) {\n//         console.error(\"Error fetching user:\", error);\n//       } else {\n//         setUser(data.user);\n//         fetchHomestay(data.user.id); // Fetch homestay only when user is available\n//       }\n//     }\n//     fetchUser();\n//   }, []);\n\n//   async function fetchHomestay(userId) {\n//     setLoading(true);\n//     try {\n//       const { data: hostData, error: hostError } = await supabase\n//         .from(\"host\")\n//         .select(\"hostid\")\n//         .eq(\"hostid\", userId) // Use Supabase's user ID instead of Clerk\n//         .single();\n\n//       if (hostError || !hostData) {\n//         console.error(\"Error fetching host ID:\", hostError);\n//         setLoading(false);\n//         return;\n//       }\n\n//       const hostId = hostData.hostid;\n\n//       const { data, error } = await supabase\n//         .from(\"homestay\")\n//         .select(\"*\")\n//         .eq(\"hostid\", hostId)\n//         .single();\n\n//       if (error) {\n//         console.error(\"Error fetching homestay:\", error);\n//       } else {\n//         setHomestay(data);\n//       }\n//     } catch (err) {\n//       console.error(\"Unexpected error:\", err);\n//     }\n//     setLoading(false);\n//   }\n\n//   function handleChange(e) {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   }\n\n//   function handleDateChange(date) {\n//     if (!date) return;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: [...prevState.availabilitydate, date]\n//     }));\n//   }\n\n//   function removeDate(index) {\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: prevState.availabilitydate.filter((_, i) => i !== index)\n//     }));\n//   }\n\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     if (!user) return;\n\n//     const { data: hostData, error: hostError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"hostid\", user.id) \n//       .single();\n\n//     if (hostError || !hostData) {\n//       console.error(\"Error fetching host ID:\", hostError);\n//       return;\n//     }\n\n//     const hostId = hostData.hostid;\n\n//     let imageUrls = [];\n\n//     for (const file of imageFiles) {\n//       const { data, error } = await supabase.storage\n//         .from(\"homestay-images\")\n//         .upload(`homestays/${user.id}/${file.name}`, file, { cacheControl: \"3600\" });\n\n//       if (error) {\n//         console.error(\"Error uploading image:\", error);\n//       } else {\n//         console.log(\"Uploaded file path:\", data.path);\n\n//         // Get the public URL\n//         const { data: publicURL } = supabase.storage\n//           .from(\"homestay-images\")\n//           .getPublicUrl(data.path);\n\n//         console.log(\"Generated Public URL:\", publicURL.publicUrl);\n//         imageUrls.push(publicURL.publicUrl);\n//       }\n//     }\n\n//     console.log(\"Final image URLs:\", imageUrls);\n\n//     const { error } = await supabase.from(\"homestay\").insert([\n//       {\n//         hostid: hostId,\n//         name: formData.name,\n//         description: formData.description,\n//         facilities: formData.facilities,\n//         availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]),\n//         location: formData.location,\n//         googlemapurl: formData.googlemapurl,\n//         numbedrooms: parseInt(formData.numbedrooms) || 0, // Convert to number and avoid null\n//         numbeds: parseInt(formData.numbeds) || 0, // Convert to number and avoid null\n//         images: imageUrls,\n//         pricepernight: parseFloat(formData.pricepernight) || 0, // Ensure number for price\n//       },\n//     ]);\n\n//     if (error) {\n//       console.error(\"Error adding homestay:\", error);\n//     } else {\n//       console.log(\"Homestay added successfully!\");\n//       fetchHomestay(user.id);\n//     }\n//   }\n\n//   if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n//   return (\n//     <div className=\"flex h-screen\">\n//       <Sidebar />\n//       <main className=\"flex-1 p-8\">\n//         <h2 className=\"text-2xl font-semibold\">Homestay Profile</h2>\n\n//         {/* ✅ Display Homestay if Exists */}\n//         {homestay ? (\n//           <div className=\"bg-white shadow-lg p-6 rounded-lg space-y-4\">\n//             <h3><span className=\"text-[#8B8B8B]\">Homestay Name:</span> {homestay.name}</h3>\n//             <p><span className=\"text-[#8B8B8B]\">Location:</span> <a href={homestay.location}>{homestay.location}</a></p>\n//             <p><span className=\"text-[#8B8B8B]\">Google Map Location:</span> <a href={homestay.googlemapurl} target=\"_blank\" className=\"text-blue-500\">{homestay.googlemapurl}</a></p>\n//             <p><span className=\"text-[#8B8B8B]\">No of bedrooms:</span> {homestay.numbedrooms} &nbsp;&nbsp;&nbsp;&nbsp; <span className=\"text-[#8B8B8B]\">No of beds:</span> {homestay.numbeds}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Price per night (Nu.):</span> {homestay.pricepernight}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Facilities:</span> {homestay.facilities}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Description:</span> {homestay.description}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Unavailable Dates:</span> {homestay.availabilitydate?.join(\", \")}</p>\n\n//             {/* ✅ Display Images in Grid */}\n//             {homestay.images.length > 0 && (\n//               <div className=\"mt-8 grid grid-cols-3 gap-4\">\n//                 {homestay.images.map((img, index) => (\n//                   <img key={index} src={img} alt={`Homestay ${index + 1}`} className=\"w-full h-36 object-cover\" />\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         ) : (\n//           // ✅ If No Homestay, Show Form\n//           <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\n//           <input type=\"text\" name=\"name\" placeholder=\"Homestay Name\" className=\"w-full border p-2 rounded\" value={formData.name} onChange={handleChange} required />\n//           <textarea name=\"description\" placeholder=\"Description\" className=\"w-full border p-2 rounded\" value={formData.description} onChange={handleChange} required />\n//           <input type=\"text\" name=\"facilities\" placeholder=\"Facilities (comma-separated)\" className=\"w-full border p-2 rounded\" value={formData.facilities} onChange={handleChange} required />\n//           <input type=\"number\" name=\"numbedroom\" placeholder=\"No of bedrooms\" className=\"w-full border p-2 rounded\" value={formData.numbedrooms} onChange={handleChange} required />\n//           <input type=\"number\" name=\"numbed\" placeholder=\"No of beds\" className=\"w-full border p-2 rounded\" value={formData.numbeds} onChange={handleChange} required />\n\n//           <div>\n//             <label className=\"block text-gray-700 font-semibold\">Unavailable Dates:</label>\n//             <DatePicker\n//               selected={null}\n//               onChange={(date) => handleDateChange(date)}\n//               dateFormat=\"yyyy-MM-dd\"\n//               className=\"w-full border p-2 rounded\"\n//               placeholderText=\"Select unavailable dates\"\n//               minDate={new Date()}\n//             />\n\n//             <div className=\"mt-2 flex flex-wrap gap-2\">\n//               {formData.availabilitydate.map((date, index) => (\n//                 <div key={index} className=\"flex items-center bg-gray-200 px-2 py-1 rounded\">\n//                   <span>{date.toISOString().split(\"T\")[0]}</span>\n//                   <button\n//                     type=\"button\"\n//                     className=\"ml-2 text-red-500\"\n//                     onClick={() => removeDate(index)}\n//                   >\n//                     ❌\n//                   </button>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           <select name=\"location\" value={formData.location} onChange={handleChange} className=\"w-full border p-2 rounded\" required>\n//             <option value=\"\" disabled>Select Dzongkhag</option>\n//             {dzongkhags.map((dzongkhag, index) => (\n//               <option key={index} value={dzongkhag}>{dzongkhag}</option>\n//             ))}\n//           </select>\n//           <input type=\"text\" name=\"googlemapurl\" placeholder=\"Google Map URL\" className=\"w-full border p-2 rounded\" value={formData.googlemapurl} onChange={handleChange} required />\n\n//           <input type=\"file\" multiple accept=\"image/*\" onChange={(e) => setImageFiles([...e.target.files])} className=\"w-full border p-2 rounded\" />\n//           <input type=\"number\" name=\"pricepernight\" placeholder=\"Price per Night (Nu.)\" className=\"w-full border p-2 rounded\" value={formData.pricepernight} onChange={handleChange} required />\n\n//           <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Add Homestay</button>\n//         </form>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default Homestay;\n\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport Sidebar from \"../../components/Sidebar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dzongkhags = [\"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\", \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"];\nfunction Homestay() {\n  _s();\n  var _homestay$availabilit;\n  const [user, setUser] = useState(null);\n  const [homestay, setHomestay] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    facilities: \"\",\n    numbedrooms: \"\",\n    numbeds: \"\",\n    availabilitydate: [],\n    location: \"\",\n    googlemapurl: \"\",\n    images: [],\n    pricepernight: \"\"\n  });\n  const [imageFiles, setImageFiles] = useState([]);\n  useEffect(() => {\n    async function fetchUser() {\n      const {\n        data,\n        error\n      } = await supabase.auth.getUser();\n      if (error) {\n        console.error(\"Error fetching user:\", error);\n      } else {\n        setUser(data.user);\n        fetchHomestay(data.user.id);\n      }\n    }\n    fetchUser();\n  }, []);\n  async function fetchHomestay(userId) {\n    setLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"homestay\").select(\"*\").eq(\"hostid\", userId).single();\n      if (error) {\n        console.error(\"Error fetching homestay:\", error);\n      } else {\n        setHomestay(data);\n        setFormData(data);\n      }\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n    }\n    setLoading(false);\n  }\n  function handleChange(e) {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handleDateChange(date) {\n    setFormData(prev => ({\n      ...prev,\n      availabilitydate: [...prev.availabilitydate, date.toISOString().split(\"T\")[0]]\n    }));\n  }\n  function removeDate(index) {\n    setFormData(prev => ({\n      ...prev,\n      availabilitydate: prev.availabilitydate.filter((_, i) => i !== index)\n    }));\n  }\n  function removeImage(index) {\n    setFormData(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!user) return;\n    let imageUrls = [...formData.images];\n    for (const file of imageFiles) {\n      const {\n        data,\n        error\n      } = await supabase.storage.from(\"homestay-images\").upload(`homestays/${user.id}/${file.name}`, file);\n      if (error) {\n        console.error(\"Error uploading image:\", error);\n      } else {\n        const {\n          data: publicURL\n        } = supabase.storage.from(\"homestay-images\").getPublicUrl(data.path);\n        imageUrls.push(publicURL.publicUrl);\n      }\n    }\n    const {\n      error\n    } = await supabase.from(\"homestay\").update({\n      ...formData,\n      images: imageUrls\n    }).eq(\"hostid\", user.id);\n    if (error) {\n      console.error(\"Error updating homestay:\", error);\n    } else {\n      console.log(\"Homestay updated successfully!\");\n      setEditMode(false);\n      fetchHomestay(user.id);\n    }\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold\",\n        children: \"Homestay Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), homestay && !editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-lg p-6 rounded-lg space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Homestay Name: \", homestay.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: homestay.location,\n            children: homestay.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Google Map: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: homestay.googlemapurl,\n            target: \"_blank\",\n            className: \"text-blue-500\",\n            children: homestay.googlemapurl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bedrooms: \", homestay.numbedrooms, \", Beds: \", homestay.numbeds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price per night: \", homestay.pricepernight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Facilities: \", homestay.facilities]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", homestay.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Unavailable Dates: \", (_homestay$availabilit = homestay.availabilitydate) === null || _homestay$availabilit === void 0 ? void 0 : _homestay$availabilit.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n          onClick: () => setEditMode(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"mt-4 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true,\n          className: \"w-full border p-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange,\n          required: true,\n          className: \"w-full border p-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"numbedrooms\",\n          value: formData.numbedrooms,\n          onChange: handleChange,\n          required: true,\n          className: \"w-full border p-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"numbeds\",\n          value: formData.numbeds,\n          onChange: handleChange,\n          required: true,\n          className: \"w-full border p-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: e => setImageFiles([...e.target.files]),\n          className: \"w-full border p-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-green-500 text-white px-4 py-2 rounded\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bg-gray-500 text-white px-4 py-2 rounded ml-4\",\n          onClick: () => setEditMode(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n}\n_s(Homestay, \"iVWZPA1wEVv2rIKIAABh6Vsd8fc=\");\n_c = Homestay;\nexport default Homestay;\nvar _c;\n$RefreshReg$(_c, \"Homestay\");","map":{"version":3,"names":["React","useEffect","useState","supabase","Sidebar","DatePicker","jsxDEV","_jsxDEV","dzongkhags","Homestay","_s","_homestay$availabilit","user","setUser","homestay","setHomestay","loading","setLoading","editMode","setEditMode","formData","setFormData","name","description","facilities","numbedrooms","numbeds","availabilitydate","location","googlemapurl","images","pricepernight","imageFiles","setImageFiles","fetchUser","data","error","auth","getUser","console","fetchHomestay","id","userId","from","select","eq","single","err","handleChange","e","target","value","handleDateChange","date","prev","toISOString","split","removeDate","index","filter","_","i","removeImage","handleSubmit","preventDefault","imageUrls","file","storage","upload","publicURL","getPublicUrl","path","push","publicUrl","update","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","join","onClick","onSubmit","type","onChange","required","multiple","files","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/host/Homestay.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { supabase } from \"../../utils/supabaseClient\";\n// import Sidebar from \"../../components/Sidebar\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// const dzongkhags = [\n//   \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \n//   \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n//   \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n// ];\n\n// function Homestay() {\n//   const [user, setUser] = useState(null);\n//   const [homestay, setHomestay] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     facilities: \"\",\n//     numbedrooms: \"\",\n//     numbeds: \"\",\n//     availabilitydate: [],\n//     location: \"\",\n//     googlemapurl: \"\",\n//     images: [],\n//     pricepernight: \"\",\n//   });\n//   const [imageFiles, setImageFiles] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchUser() {\n//       const { data, error } = await supabase.auth.getUser();\n//       if (error) {\n//         console.error(\"Error fetching user:\", error);\n//       } else {\n//         setUser(data.user);\n//         fetchHomestay(data.user.id); // Fetch homestay only when user is available\n//       }\n//     }\n//     fetchUser();\n//   }, []);\n\n//   async function fetchHomestay(userId) {\n//     setLoading(true);\n//     try {\n//       const { data: hostData, error: hostError } = await supabase\n//         .from(\"host\")\n//         .select(\"hostid\")\n//         .eq(\"hostid\", userId) // Use Supabase's user ID instead of Clerk\n//         .single();\n  \n//       if (hostError || !hostData) {\n//         console.error(\"Error fetching host ID:\", hostError);\n//         setLoading(false);\n//         return;\n//       }\n  \n//       const hostId = hostData.hostid;\n  \n//       const { data, error } = await supabase\n//         .from(\"homestay\")\n//         .select(\"*\")\n//         .eq(\"hostid\", hostId)\n//         .single();\n  \n//       if (error) {\n//         console.error(\"Error fetching homestay:\", error);\n//       } else {\n//         setHomestay(data);\n//       }\n//     } catch (err) {\n//       console.error(\"Unexpected error:\", err);\n//     }\n//     setLoading(false);\n//   }\n\n//   function handleChange(e) {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   }\n\n//   function handleDateChange(date) {\n//     if (!date) return;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: [...prevState.availabilitydate, date]\n//     }));\n//   }\n\n//   function removeDate(index) {\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: prevState.availabilitydate.filter((_, i) => i !== index)\n//     }));\n//   }\n\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     if (!user) return;\n  \n//     const { data: hostData, error: hostError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"hostid\", user.id) \n//       .single();\n  \n//     if (hostError || !hostData) {\n//       console.error(\"Error fetching host ID:\", hostError);\n//       return;\n//     }\n  \n//     const hostId = hostData.hostid;\n    \n//     let imageUrls = [];\n\n//     for (const file of imageFiles) {\n//       const { data, error } = await supabase.storage\n//         .from(\"homestay-images\")\n//         .upload(`homestays/${user.id}/${file.name}`, file, { cacheControl: \"3600\" });\n\n//       if (error) {\n//         console.error(\"Error uploading image:\", error);\n//       } else {\n//         console.log(\"Uploaded file path:\", data.path);\n\n//         // Get the public URL\n//         const { data: publicURL } = supabase.storage\n//           .from(\"homestay-images\")\n//           .getPublicUrl(data.path);\n\n//         console.log(\"Generated Public URL:\", publicURL.publicUrl);\n//         imageUrls.push(publicURL.publicUrl);\n//       }\n//     }\n    \n//     console.log(\"Final image URLs:\", imageUrls);\n    \n//     const { error } = await supabase.from(\"homestay\").insert([\n//       {\n//         hostid: hostId,\n//         name: formData.name,\n//         description: formData.description,\n//         facilities: formData.facilities,\n//         availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]),\n//         location: formData.location,\n//         googlemapurl: formData.googlemapurl,\n//         numbedrooms: parseInt(formData.numbedrooms) || 0, // Convert to number and avoid null\n//         numbeds: parseInt(formData.numbeds) || 0, // Convert to number and avoid null\n//         images: imageUrls,\n//         pricepernight: parseFloat(formData.pricepernight) || 0, // Ensure number for price\n//       },\n//     ]);\n    \n  \n//     if (error) {\n//       console.error(\"Error adding homestay:\", error);\n//     } else {\n//       console.log(\"Homestay added successfully!\");\n//       fetchHomestay(user.id);\n//     }\n//   }\n\n//   if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n\n//   return (\n//     <div className=\"flex h-screen\">\n//       <Sidebar />\n//       <main className=\"flex-1 p-8\">\n//         <h2 className=\"text-2xl font-semibold\">Homestay Profile</h2>\n\n//         {/* ✅ Display Homestay if Exists */}\n//         {homestay ? (\n//           <div className=\"bg-white shadow-lg p-6 rounded-lg space-y-4\">\n//             <h3><span className=\"text-[#8B8B8B]\">Homestay Name:</span> {homestay.name}</h3>\n//             <p><span className=\"text-[#8B8B8B]\">Location:</span> <a href={homestay.location}>{homestay.location}</a></p>\n//             <p><span className=\"text-[#8B8B8B]\">Google Map Location:</span> <a href={homestay.googlemapurl} target=\"_blank\" className=\"text-blue-500\">{homestay.googlemapurl}</a></p>\n//             <p><span className=\"text-[#8B8B8B]\">No of bedrooms:</span> {homestay.numbedrooms} &nbsp;&nbsp;&nbsp;&nbsp; <span className=\"text-[#8B8B8B]\">No of beds:</span> {homestay.numbeds}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Price per night (Nu.):</span> {homestay.pricepernight}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Facilities:</span> {homestay.facilities}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Description:</span> {homestay.description}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Unavailable Dates:</span> {homestay.availabilitydate?.join(\", \")}</p>\n\n//             {/* ✅ Display Images in Grid */}\n//             {homestay.images.length > 0 && (\n//               <div className=\"mt-8 grid grid-cols-3 gap-4\">\n//                 {homestay.images.map((img, index) => (\n//                   <img key={index} src={img} alt={`Homestay ${index + 1}`} className=\"w-full h-36 object-cover\" />\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         ) : (\n//           // ✅ If No Homestay, Show Form\n//           <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\n//           <input type=\"text\" name=\"name\" placeholder=\"Homestay Name\" className=\"w-full border p-2 rounded\" value={formData.name} onChange={handleChange} required />\n//           <textarea name=\"description\" placeholder=\"Description\" className=\"w-full border p-2 rounded\" value={formData.description} onChange={handleChange} required />\n//           <input type=\"text\" name=\"facilities\" placeholder=\"Facilities (comma-separated)\" className=\"w-full border p-2 rounded\" value={formData.facilities} onChange={handleChange} required />\n//           <input type=\"number\" name=\"numbedroom\" placeholder=\"No of bedrooms\" className=\"w-full border p-2 rounded\" value={formData.numbedrooms} onChange={handleChange} required />\n//           <input type=\"number\" name=\"numbed\" placeholder=\"No of beds\" className=\"w-full border p-2 rounded\" value={formData.numbeds} onChange={handleChange} required />\n\n//           <div>\n//             <label className=\"block text-gray-700 font-semibold\">Unavailable Dates:</label>\n//             <DatePicker\n//               selected={null}\n//               onChange={(date) => handleDateChange(date)}\n//               dateFormat=\"yyyy-MM-dd\"\n//               className=\"w-full border p-2 rounded\"\n//               placeholderText=\"Select unavailable dates\"\n//               minDate={new Date()}\n//             />\n\n//             <div className=\"mt-2 flex flex-wrap gap-2\">\n//               {formData.availabilitydate.map((date, index) => (\n//                 <div key={index} className=\"flex items-center bg-gray-200 px-2 py-1 rounded\">\n//                   <span>{date.toISOString().split(\"T\")[0]}</span>\n//                   <button\n//                     type=\"button\"\n//                     className=\"ml-2 text-red-500\"\n//                     onClick={() => removeDate(index)}\n//                   >\n//                     ❌\n//                   </button>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           <select name=\"location\" value={formData.location} onChange={handleChange} className=\"w-full border p-2 rounded\" required>\n//             <option value=\"\" disabled>Select Dzongkhag</option>\n//             {dzongkhags.map((dzongkhag, index) => (\n//               <option key={index} value={dzongkhag}>{dzongkhag}</option>\n//             ))}\n//           </select>\n//           <input type=\"text\" name=\"googlemapurl\" placeholder=\"Google Map URL\" className=\"w-full border p-2 rounded\" value={formData.googlemapurl} onChange={handleChange} required />\n\n\n//           <input type=\"file\" multiple accept=\"image/*\" onChange={(e) => setImageFiles([...e.target.files])} className=\"w-full border p-2 rounded\" />\n//           <input type=\"number\" name=\"pricepernight\" placeholder=\"Price per Night (Nu.)\" className=\"w-full border p-2 rounded\" value={formData.pricepernight} onChange={handleChange} required />\n\n          \n//           <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Add Homestay</button>\n//         </form>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default Homestay;\n\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport Sidebar from \"../../components/Sidebar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst dzongkhags = [\n  \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \n  \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n  \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n];\n\nfunction Homestay() {\n  const [user, setUser] = useState(null);\n  const [homestay, setHomestay] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    facilities: \"\",\n    numbedrooms: \"\",\n    numbeds: \"\",\n    availabilitydate: [],\n    location: \"\",\n    googlemapurl: \"\",\n    images: [],\n    pricepernight: \"\",\n  });\n  const [imageFiles, setImageFiles] = useState([]);\n\n  useEffect(() => {\n    async function fetchUser() {\n      const { data, error } = await supabase.auth.getUser();\n      if (error) {\n        console.error(\"Error fetching user:\", error);\n      } else {\n        setUser(data.user);\n        fetchHomestay(data.user.id);\n      }\n    }\n    fetchUser();\n  }, []);\n\n  async function fetchHomestay(userId) {\n    setLoading(true);\n    try {\n      const { data, error } = await supabase.from(\"homestay\").select(\"*\").eq(\"hostid\", userId).single();\n      if (error) {\n        console.error(\"Error fetching homestay:\", error);\n      } else {\n        setHomestay(data);\n        setFormData(data);\n      }\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n    }\n    setLoading(false);\n  }\n\n  function handleChange(e) {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n\n  function handleDateChange(date) {\n    setFormData(prev => ({ ...prev, availabilitydate: [...prev.availabilitydate, date.toISOString().split(\"T\")[0]] }));\n  }\n\n  function removeDate(index) {\n    setFormData(prev => ({\n      ...prev,\n      availabilitydate: prev.availabilitydate.filter((_, i) => i !== index),\n    }));\n  }\n\n  function removeImage(index) {\n    setFormData(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index),\n    }));\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!user) return;\n    \n    let imageUrls = [...formData.images];\n    for (const file of imageFiles) {\n      const { data, error } = await supabase.storage.from(\"homestay-images\").upload(`homestays/${user.id}/${file.name}`, file);\n      if (error) {\n        console.error(\"Error uploading image:\", error);\n      } else {\n        const { data: publicURL } = supabase.storage.from(\"homestay-images\").getPublicUrl(data.path);\n        imageUrls.push(publicURL.publicUrl);\n      }\n    }\n    \n    const { error } = await supabase.from(\"homestay\").update({\n      ...formData,\n      images: imageUrls,\n    }).eq(\"hostid\", user.id);\n    \n    if (error) {\n      console.error(\"Error updating homestay:\", error);\n    } else {\n      console.log(\"Homestay updated successfully!\");\n      setEditMode(false);\n      fetchHomestay(user.id);\n    }\n  }\n\n  if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n  return (\n    <div className=\"flex h-screen\">\n      <Sidebar />\n      <main className=\"flex-1 p-8\">\n        <h2 className=\"text-2xl font-semibold\">Homestay Profile</h2>\n\n        {homestay && !editMode ? (\n          <div className=\"bg-white shadow-lg p-6 rounded-lg space-y-4\">\n            <h3>Homestay Name: {homestay.name}</h3>\n            <p>Location: <a href={homestay.location}>{homestay.location}</a></p>\n            <p>Google Map: <a href={homestay.googlemapurl} target=\"_blank\" className=\"text-blue-500\">{homestay.googlemapurl}</a></p>\n            <p>Bedrooms: {homestay.numbedrooms}, Beds: {homestay.numbeds}</p>\n            <p>Price per night: {homestay.pricepernight}</p>\n            <p>Facilities: {homestay.facilities}</p>\n            <p>Description: {homestay.description}</p>\n            <p>Unavailable Dates: {homestay.availabilitydate?.join(\", \")}</p>\n            <button className=\"bg-blue-500 text-white px-4 py-2 rounded\" onClick={() => setEditMode(true)}>Edit</button>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\n            <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required className=\"w-full border p-2 rounded\" />\n            <textarea name=\"description\" value={formData.description} onChange={handleChange} required className=\"w-full border p-2 rounded\" />\n            <input type=\"number\" name=\"numbedrooms\" value={formData.numbedrooms} onChange={handleChange} required className=\"w-full border p-2 rounded\" />\n            <input type=\"number\" name=\"numbeds\" value={formData.numbeds} onChange={handleChange} required className=\"w-full border p-2 rounded\" />\n            <input type=\"file\" multiple onChange={(e) => setImageFiles([...e.target.files])} className=\"w-full border p-2 rounded\" />\n            <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Save</button>\n            <button type=\"button\" className=\"bg-gray-500 text-white px-4 py-2 rounded ml-4\" onClick={() => setEditMode(false)}>Cancel</button>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Homestay;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,OAAOC,OAAO,MAAM,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}