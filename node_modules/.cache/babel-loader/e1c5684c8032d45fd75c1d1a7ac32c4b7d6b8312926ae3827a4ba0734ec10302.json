{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/Druk-Trip/src/pages/Restaurant.jsx\";\nimport React from \"react\";\nimport Card from \"../components/Card\";\nimport data from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Restaurant = ({\n  chatbotVisible\n}) => {\n  // Filter the data array to include only items with type 'restaurant'\n  const restaurantData = data.filter(card => card.type === \"restaurant\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-between overflow-hidden w-full gap-y-12\",\n      children: restaurantData.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        data: card,\n        chatbotVisible: chatbotVisible\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Restaurant;\nexport default Restaurant;\nvar _c;\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"names":["React","Card","data","jsxDEV","_jsxDEV","Fragment","_Fragment","Restaurant","chatbotVisible","restaurantData","filter","card","type","children","className","map","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/Druk-Trip/src/pages/Restaurant.jsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"../components/Card\";\nimport data from \"../data/data\";\n\nconst Restaurant = ({ chatbotVisible }) => {\n  // Filter the data array to include only items with type 'restaurant'\n  const restaurantData = data.filter((card) => card.type === \"restaurant\");\n\n  return (\n    <>\n      <div className=\"flex flex-wrap justify-between overflow-hidden w-full gap-y-12\">\n        {restaurantData.map((card, index) => (\n          <Card key={index} data={card} chatbotVisible={chatbotVisible} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Restaurant;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EACzC;EACA,MAAMC,cAAc,GAAGP,IAAI,CAACQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,YAAY,CAAC;EAExE,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,gEAAgE;MAAAD,QAAA,EAC5EJ,cAAc,CAACM,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,kBAC9BZ,OAAA,CAACH,IAAI;QAAaC,IAAI,EAAES,IAAK;QAACH,cAAc,EAAEA;MAAe,GAAlDQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+C,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACC,EAAA,GAbId,UAAU;AAehB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}