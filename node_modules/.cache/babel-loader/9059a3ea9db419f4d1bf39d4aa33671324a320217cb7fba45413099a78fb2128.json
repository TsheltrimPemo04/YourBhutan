{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/host/Homestay.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { supabase } from \"../../utils/supabaseClient\";\n// import Sidebar from \"../../components/Sidebar\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// const dzongkhags = [\n//   \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \n//   \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n//   \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n// ];\n\n// function Homestay() {\n//   const [user, setUser] = useState(null);\n//   const [homestay, setHomestay] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     facilities: \"\",\n//     numbedrooms: \"\",\n//     numbeds: \"\",\n//     availabilitydate: [],\n//     location: \"\",\n//     googlemapurl: \"\",\n//     images: [],\n//     pricepernight: \"\",\n//   });\n//   const [imageFiles, setImageFiles] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchUser() {\n//       const { data, error } = await supabase.auth.getUser();\n//       if (error) {\n//         console.error(\"Error fetching user:\", error);\n//       } else {\n//         setUser(data.user);\n//         fetchHomestay(data.user.id); // Fetch homestay only when user is available\n//       }\n//     }\n//     fetchUser();\n//   }, []);\n\n//   async function fetchHomestay(userId) {\n//     setLoading(true);\n//     try {\n//       const { data: hostData, error: hostError } = await supabase\n//         .from(\"host\")\n//         .select(\"hostid\")\n//         .eq(\"hostid\", userId) // Use Supabase's user ID instead of Clerk\n//         .single();\n\n//       if (hostError || !hostData) {\n//         console.error(\"Error fetching host ID:\", hostError);\n//         setLoading(false);\n//         return;\n//       }\n\n//       const hostId = hostData.hostid;\n\n//       const { data, error } = await supabase\n//         .from(\"homestay\")\n//         .select(\"*\")\n//         .eq(\"hostid\", hostId)\n//         .single();\n\n//       if (error) {\n//         console.error(\"Error fetching homestay:\", error);\n//       } else {\n//         setHomestay(data);\n//       }\n//     } catch (err) {\n//       console.error(\"Unexpected error:\", err);\n//     }\n//     setLoading(false);\n//   }\n\n//   function handleChange(e) {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   }\n\n//   function handleDateChange(date) {\n//     if (!date) return;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: [...prevState.availabilitydate, date]\n//     }));\n//   }\n\n//   function removeDate(index) {\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: prevState.availabilitydate.filter((_, i) => i !== index)\n//     }));\n//   }\n\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     if (!user) return;\n\n//     const { data: hostData, error: hostError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"hostid\", user.id) \n//       .single();\n\n//     if (hostError || !hostData) {\n//       console.error(\"Error fetching host ID:\", hostError);\n//       return;\n//     }\n\n//     const hostId = hostData.hostid;\n\n//     let imageUrls = [];\n\n//     for (const file of imageFiles) {\n//       const { data, error } = await supabase.storage\n//         .from(\"homestay-images\")\n//         .upload(`homestays/${user.id}/${file.name}`, file, { cacheControl: \"3600\" });\n\n//       if (error) {\n//         console.error(\"Error uploading image:\", error);\n//       } else {\n//         console.log(\"Uploaded file path:\", data.path);\n\n//         // Get the public URL\n//         const { data: publicURL } = supabase.storage\n//           .from(\"homestay-images\")\n//           .getPublicUrl(data.path);\n\n//         console.log(\"Generated Public URL:\", publicURL.publicUrl);\n//         imageUrls.push(publicURL.publicUrl);\n//       }\n//     }\n\n//     console.log(\"Final image URLs:\", imageUrls);\n\n//     const { error } = await supabase.from(\"homestay\").insert([\n//       {\n//         hostid: hostId,\n//         name: formData.name,\n//         description: formData.description,\n//         facilities: formData.facilities,\n//         availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]),\n//         location: formData.location,\n//         googlemapurl: formData.googlemapurl,\n//         numbedrooms: parseInt(formData.numbedrooms) || 0, // Convert to number and avoid null\n//         numbeds: parseInt(formData.numbeds) || 0, // Convert to number and avoid null\n//         images: imageUrls,\n//         pricepernight: parseFloat(formData.pricepernight) || 0, // Ensure number for price\n//       },\n//     ]);\n\n//     if (error) {\n//       console.error(\"Error adding homestay:\", error);\n//     } else {\n//       console.log(\"Homestay added successfully!\");\n//       fetchHomestay(user.id);\n//     }\n//   }\n\n//   if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n//   return (\n//     <div className=\"flex h-screen\">\n//       <Sidebar />\n//       <main className=\"flex-1 p-8\">\n//         <h2 className=\"text-2xl font-semibold\">Homestay Profile</h2>\n\n//         {/* ✅ Display Homestay if Exists */}\n//         {homestay ? (\n//           <div className=\"bg-white shadow-lg p-6 rounded-lg space-y-4\">\n//             <h3><span className=\"text-[#8B8B8B]\">Homestay Name:</span> {homestay.name}</h3>\n//             <p><span className=\"text-[#8B8B8B]\">Location:</span> <a href={homestay.location}>{homestay.location}</a></p>\n//             <p><span className=\"text-[#8B8B8B]\">Google Map Location:</span> <a href={homestay.googlemapurl} target=\"_blank\" className=\"text-blue-500\">{homestay.googlemapurl}</a></p>\n//             <p><span className=\"text-[#8B8B8B]\">No of bedrooms:</span> {homestay.numbedrooms} &nbsp;&nbsp;&nbsp;&nbsp; <span className=\"text-[#8B8B8B]\">No of beds:</span> {homestay.numbeds}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Price per night (Nu.):</span> {homestay.pricepernight}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Facilities:</span> {homestay.facilities}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Description:</span> {homestay.description}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Unavailable Dates:</span> {homestay.availabilitydate?.join(\", \")}</p>\n\n//             {/* ✅ Display Images in Grid */}\n//             {homestay.images.length > 0 && (\n//               <div className=\"mt-8 grid grid-cols-3 gap-4\">\n//                 {homestay.images.map((img, index) => (\n//                   <img key={index} src={img} alt={`Homestay ${index + 1}`} className=\"w-full h-36 object-cover\" />\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         ) : (\n//           // ✅ If No Homestay, Show Form\n//           <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\n//           <input type=\"text\" name=\"name\" placeholder=\"Homestay Name\" className=\"w-full border p-2 rounded\" value={formData.name} onChange={handleChange} required />\n//           <textarea name=\"description\" placeholder=\"Description\" className=\"w-full border p-2 rounded\" value={formData.description} onChange={handleChange} required />\n//           <input type=\"text\" name=\"facilities\" placeholder=\"Facilities (comma-separated)\" className=\"w-full border p-2 rounded\" value={formData.facilities} onChange={handleChange} required />\n//           <input type=\"number\" name=\"numbedroom\" placeholder=\"No of bedrooms\" className=\"w-full border p-2 rounded\" value={formData.numbedrooms} onChange={handleChange} required />\n//           <input type=\"number\" name=\"numbed\" placeholder=\"No of beds\" className=\"w-full border p-2 rounded\" value={formData.numbeds} onChange={handleChange} required />\n\n//           <div>\n//             <label className=\"block text-gray-700 font-semibold\">Unavailable Dates:</label>\n//             <DatePicker\n//               selected={null}\n//               onChange={(date) => handleDateChange(date)}\n//               dateFormat=\"yyyy-MM-dd\"\n//               className=\"w-full border p-2 rounded\"\n//               placeholderText=\"Select unavailable dates\"\n//               minDate={new Date()}\n//             />\n\n//             <div className=\"mt-2 flex flex-wrap gap-2\">\n//               {formData.availabilitydate.map((date, index) => (\n//                 <div key={index} className=\"flex items-center bg-gray-200 px-2 py-1 rounded\">\n//                   <span>{date.toISOString().split(\"T\")[0]}</span>\n//                   <button\n//                     type=\"button\"\n//                     className=\"ml-2 text-red-500\"\n//                     onClick={() => removeDate(index)}\n//                   >\n//                     ❌\n//                   </button>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           <select name=\"location\" value={formData.location} onChange={handleChange} className=\"w-full border p-2 rounded\" required>\n//             <option value=\"\" disabled>Select Dzongkhag</option>\n//             {dzongkhags.map((dzongkhag, index) => (\n//               <option key={index} value={dzongkhag}>{dzongkhag}</option>\n//             ))}\n//           </select>\n//           <input type=\"text\" name=\"googlemapurl\" placeholder=\"Google Map URL\" className=\"w-full border p-2 rounded\" value={formData.googlemapurl} onChange={handleChange} required />\n\n//           <input type=\"file\" multiple accept=\"image/*\" onChange={(e) => setImageFiles([...e.target.files])} className=\"w-full border p-2 rounded\" />\n//           <input type=\"number\" name=\"pricepernight\" placeholder=\"Price per Night (Nu.)\" className=\"w-full border p-2 rounded\" value={formData.pricepernight} onChange={handleChange} required />\n\n//           <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Add Homestay</button>\n//         </form>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default Homestay;\n\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport Sidebar from \"../../components/Sidebar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dzongkhags = [\"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\", \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"];\nfunction Homestay() {\n  _s();\n  var _homestay$availabilit;\n  const [user, setUser] = useState(null);\n  const [homestay, setHomestay] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    facilities: \"\",\n    numbedrooms: \"\",\n    numbeds: \"\",\n    availabilitydate: [],\n    location: \"\",\n    googlemapurl: \"\",\n    images: [],\n    pricepernight: \"\"\n  });\n  const [imageFiles, setImageFiles] = useState([]);\n  useEffect(() => {\n    async function fetchUser() {\n      const {\n        data,\n        error\n      } = await supabase.auth.getUser();\n      if (error) {\n        console.error(\"Error fetching user:\", error);\n      } else {\n        setUser(data.user);\n        fetchHomestay(data.user.id);\n      }\n    }\n    fetchUser();\n  }, []);\n  async function fetchHomestay(userId) {\n    setLoading(true);\n    try {\n      const {\n        data: hostData,\n        error: hostError\n      } = await supabase.from(\"host\").select(\"hostid\").eq(\"hostid\", userId).single();\n      if (hostError || !hostData) {\n        console.error(\"Error fetching host ID:\", hostError);\n        setLoading(false);\n        return;\n      }\n      const hostId = hostData.hostid;\n      const {\n        data,\n        error\n      } = await supabase.from(\"homestay\").select(\"*\").eq(\"hostid\", hostId).single();\n      if (error) {\n        console.error(\"Error fetching homestay:\", error);\n      } else {\n        setHomestay(data);\n        setFormData({\n          ...data,\n          availabilitydate: data.availabilitydate || []\n        });\n      }\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n    }\n    setLoading(false);\n  }\n  function handleChange(e) {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handleDateChange(date) {\n    if (!date) return;\n    setFormData(prevState => ({\n      ...prevState,\n      availabilitydate: [...prevState.availabilitydate, date]\n    }));\n  }\n  function removeDate(index) {\n    setFormData(prevState => ({\n      ...prevState,\n      availabilitydate: prevState.availabilitydate.filter((_, i) => i !== index)\n    }));\n  }\n  async function handleUpdate(e) {\n    e.preventDefault();\n    if (!user || !homestay) return;\n    const {\n      error\n    } = await supabase.from(\"homestay\").update({\n      name: formData.name,\n      description: formData.description,\n      facilities: formData.facilities,\n      availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]),\n      location: formData.location,\n      googlemapurl: formData.googlemapurl,\n      numbedrooms: parseInt(formData.numbedrooms) || 0,\n      numbeds: parseInt(formData.numbeds) || 0,\n      pricepernight: parseFloat(formData.pricepernight) || 0\n    }).eq(\"hostid\", homestay.hostid);\n    if (error) {\n      console.error(\"Error updating homestay:\", error);\n    } else {\n      console.log(\"Homestay updated successfully!\");\n      fetchHomestay(user.id);\n      setIsEditing(false);\n    }\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold\",\n        children: \"Homestay Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), homestay && !isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-lg p-6 rounded-lg space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"Homestay Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this), \" \", homestay.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 16\n          }, this), \" \", homestay.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"Google Map Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: homestay.googlemapurl,\n            target: \"_blank\",\n            className: \"text-blue-500\",\n            children: homestay.googlemapurl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"No of bedrooms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 16\n          }, this), \" \", homestay.numbedrooms, \" \\xA0\\xA0\\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"No of beds:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 120\n          }, this), \" \", homestay.numbeds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"Price per night (Nu.):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 16\n          }, this), \" \", homestay.pricepernight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"Facilities:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 16\n          }, this), \" \", homestay.facilities]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 16\n          }, this), \" \", homestay.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#8B8B8B]\",\n            children: \"Unavailable Dates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 16\n          }, this), \" \", (_homestay$availabilit = homestay.availabilitydate) === null || _homestay$availabilit === void 0 ? void 0 : _homestay$availabilit.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        className: \"mt-4 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          className: \"w-full border p-2 rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange,\n          className: \"w-full border p-2 rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"facilities\",\n          value: formData.facilities,\n          onChange: handleChange,\n          className: \"w-full border p-2 rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"numbedrooms\",\n          value: formData.numbedrooms,\n          onChange: handleChange,\n          className: \"w-full border p-2 rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"numbeds\",\n          value: formData.numbeds,\n          onChange: handleChange,\n          className: \"w-full border p-2 rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"pricepernight\",\n          value: formData.pricepernight,\n          onChange: handleChange,\n          className: \"w-full border p-2 rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-green-500 text-white px-4 py-2 rounded\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(false),\n          className: \"ml-2 bg-gray-500 text-white px-4 py-2 rounded\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n}\n_s(Homestay, \"va4c0Lj+1b7IB3KbCkLdz09mUVs=\");\n_c = Homestay;\nexport default Homestay;\nvar _c;\n$RefreshReg$(_c, \"Homestay\");","map":{"version":3,"names":["React","useEffect","useState","supabase","Sidebar","DatePicker","jsxDEV","_jsxDEV","dzongkhags","Homestay","_s","_homestay$availabilit","user","setUser","homestay","setHomestay","loading","setLoading","isEditing","setIsEditing","formData","setFormData","name","description","facilities","numbedrooms","numbeds","availabilitydate","location","googlemapurl","images","pricepernight","imageFiles","setImageFiles","fetchUser","data","error","auth","getUser","console","fetchHomestay","id","userId","hostData","hostError","from","select","eq","single","hostId","hostid","err","handleChange","e","target","value","handleDateChange","date","prevState","removeDate","index","filter","_","i","handleUpdate","preventDefault","update","map","toISOString","split","parseInt","parseFloat","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","join","onClick","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/host/Homestay.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { supabase } from \"../../utils/supabaseClient\";\n// import Sidebar from \"../../components/Sidebar\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// const dzongkhags = [\n//   \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \n//   \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n//   \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n// ];\n\n// function Homestay() {\n//   const [user, setUser] = useState(null);\n//   const [homestay, setHomestay] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     facilities: \"\",\n//     numbedrooms: \"\",\n//     numbeds: \"\",\n//     availabilitydate: [],\n//     location: \"\",\n//     googlemapurl: \"\",\n//     images: [],\n//     pricepernight: \"\",\n//   });\n//   const [imageFiles, setImageFiles] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchUser() {\n//       const { data, error } = await supabase.auth.getUser();\n//       if (error) {\n//         console.error(\"Error fetching user:\", error);\n//       } else {\n//         setUser(data.user);\n//         fetchHomestay(data.user.id); // Fetch homestay only when user is available\n//       }\n//     }\n//     fetchUser();\n//   }, []);\n\n//   async function fetchHomestay(userId) {\n//     setLoading(true);\n//     try {\n//       const { data: hostData, error: hostError } = await supabase\n//         .from(\"host\")\n//         .select(\"hostid\")\n//         .eq(\"hostid\", userId) // Use Supabase's user ID instead of Clerk\n//         .single();\n  \n//       if (hostError || !hostData) {\n//         console.error(\"Error fetching host ID:\", hostError);\n//         setLoading(false);\n//         return;\n//       }\n  \n//       const hostId = hostData.hostid;\n  \n//       const { data, error } = await supabase\n//         .from(\"homestay\")\n//         .select(\"*\")\n//         .eq(\"hostid\", hostId)\n//         .single();\n  \n//       if (error) {\n//         console.error(\"Error fetching homestay:\", error);\n//       } else {\n//         setHomestay(data);\n//       }\n//     } catch (err) {\n//       console.error(\"Unexpected error:\", err);\n//     }\n//     setLoading(false);\n//   }\n\n//   function handleChange(e) {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   }\n\n//   function handleDateChange(date) {\n//     if (!date) return;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: [...prevState.availabilitydate, date]\n//     }));\n//   }\n\n//   function removeDate(index) {\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: prevState.availabilitydate.filter((_, i) => i !== index)\n//     }));\n//   }\n\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     if (!user) return;\n  \n//     const { data: hostData, error: hostError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"hostid\", user.id) \n//       .single();\n  \n//     if (hostError || !hostData) {\n//       console.error(\"Error fetching host ID:\", hostError);\n//       return;\n//     }\n  \n//     const hostId = hostData.hostid;\n    \n//     let imageUrls = [];\n\n//     for (const file of imageFiles) {\n//       const { data, error } = await supabase.storage\n//         .from(\"homestay-images\")\n//         .upload(`homestays/${user.id}/${file.name}`, file, { cacheControl: \"3600\" });\n\n//       if (error) {\n//         console.error(\"Error uploading image:\", error);\n//       } else {\n//         console.log(\"Uploaded file path:\", data.path);\n\n//         // Get the public URL\n//         const { data: publicURL } = supabase.storage\n//           .from(\"homestay-images\")\n//           .getPublicUrl(data.path);\n\n//         console.log(\"Generated Public URL:\", publicURL.publicUrl);\n//         imageUrls.push(publicURL.publicUrl);\n//       }\n//     }\n    \n//     console.log(\"Final image URLs:\", imageUrls);\n    \n//     const { error } = await supabase.from(\"homestay\").insert([\n//       {\n//         hostid: hostId,\n//         name: formData.name,\n//         description: formData.description,\n//         facilities: formData.facilities,\n//         availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]),\n//         location: formData.location,\n//         googlemapurl: formData.googlemapurl,\n//         numbedrooms: parseInt(formData.numbedrooms) || 0, // Convert to number and avoid null\n//         numbeds: parseInt(formData.numbeds) || 0, // Convert to number and avoid null\n//         images: imageUrls,\n//         pricepernight: parseFloat(formData.pricepernight) || 0, // Ensure number for price\n//       },\n//     ]);\n    \n  \n//     if (error) {\n//       console.error(\"Error adding homestay:\", error);\n//     } else {\n//       console.log(\"Homestay added successfully!\");\n//       fetchHomestay(user.id);\n//     }\n//   }\n\n//   if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n\n//   return (\n//     <div className=\"flex h-screen\">\n//       <Sidebar />\n//       <main className=\"flex-1 p-8\">\n//         <h2 className=\"text-2xl font-semibold\">Homestay Profile</h2>\n\n//         {/* ✅ Display Homestay if Exists */}\n//         {homestay ? (\n//           <div className=\"bg-white shadow-lg p-6 rounded-lg space-y-4\">\n//             <h3><span className=\"text-[#8B8B8B]\">Homestay Name:</span> {homestay.name}</h3>\n//             <p><span className=\"text-[#8B8B8B]\">Location:</span> <a href={homestay.location}>{homestay.location}</a></p>\n//             <p><span className=\"text-[#8B8B8B]\">Google Map Location:</span> <a href={homestay.googlemapurl} target=\"_blank\" className=\"text-blue-500\">{homestay.googlemapurl}</a></p>\n//             <p><span className=\"text-[#8B8B8B]\">No of bedrooms:</span> {homestay.numbedrooms} &nbsp;&nbsp;&nbsp;&nbsp; <span className=\"text-[#8B8B8B]\">No of beds:</span> {homestay.numbeds}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Price per night (Nu.):</span> {homestay.pricepernight}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Facilities:</span> {homestay.facilities}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Description:</span> {homestay.description}</p>\n//             <p><span className=\"text-[#8B8B8B]\">Unavailable Dates:</span> {homestay.availabilitydate?.join(\", \")}</p>\n\n//             {/* ✅ Display Images in Grid */}\n//             {homestay.images.length > 0 && (\n//               <div className=\"mt-8 grid grid-cols-3 gap-4\">\n//                 {homestay.images.map((img, index) => (\n//                   <img key={index} src={img} alt={`Homestay ${index + 1}`} className=\"w-full h-36 object-cover\" />\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         ) : (\n//           // ✅ If No Homestay, Show Form\n//           <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\n//           <input type=\"text\" name=\"name\" placeholder=\"Homestay Name\" className=\"w-full border p-2 rounded\" value={formData.name} onChange={handleChange} required />\n//           <textarea name=\"description\" placeholder=\"Description\" className=\"w-full border p-2 rounded\" value={formData.description} onChange={handleChange} required />\n//           <input type=\"text\" name=\"facilities\" placeholder=\"Facilities (comma-separated)\" className=\"w-full border p-2 rounded\" value={formData.facilities} onChange={handleChange} required />\n//           <input type=\"number\" name=\"numbedroom\" placeholder=\"No of bedrooms\" className=\"w-full border p-2 rounded\" value={formData.numbedrooms} onChange={handleChange} required />\n//           <input type=\"number\" name=\"numbed\" placeholder=\"No of beds\" className=\"w-full border p-2 rounded\" value={formData.numbeds} onChange={handleChange} required />\n\n//           <div>\n//             <label className=\"block text-gray-700 font-semibold\">Unavailable Dates:</label>\n//             <DatePicker\n//               selected={null}\n//               onChange={(date) => handleDateChange(date)}\n//               dateFormat=\"yyyy-MM-dd\"\n//               className=\"w-full border p-2 rounded\"\n//               placeholderText=\"Select unavailable dates\"\n//               minDate={new Date()}\n//             />\n\n//             <div className=\"mt-2 flex flex-wrap gap-2\">\n//               {formData.availabilitydate.map((date, index) => (\n//                 <div key={index} className=\"flex items-center bg-gray-200 px-2 py-1 rounded\">\n//                   <span>{date.toISOString().split(\"T\")[0]}</span>\n//                   <button\n//                     type=\"button\"\n//                     className=\"ml-2 text-red-500\"\n//                     onClick={() => removeDate(index)}\n//                   >\n//                     ❌\n//                   </button>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           <select name=\"location\" value={formData.location} onChange={handleChange} className=\"w-full border p-2 rounded\" required>\n//             <option value=\"\" disabled>Select Dzongkhag</option>\n//             {dzongkhags.map((dzongkhag, index) => (\n//               <option key={index} value={dzongkhag}>{dzongkhag}</option>\n//             ))}\n//           </select>\n//           <input type=\"text\" name=\"googlemapurl\" placeholder=\"Google Map URL\" className=\"w-full border p-2 rounded\" value={formData.googlemapurl} onChange={handleChange} required />\n\n\n//           <input type=\"file\" multiple accept=\"image/*\" onChange={(e) => setImageFiles([...e.target.files])} className=\"w-full border p-2 rounded\" />\n//           <input type=\"number\" name=\"pricepernight\" placeholder=\"Price per Night (Nu.)\" className=\"w-full border p-2 rounded\" value={formData.pricepernight} onChange={handleChange} required />\n\n          \n//           <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Add Homestay</button>\n//         </form>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default Homestay;\n\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport Sidebar from \"../../components/Sidebar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst dzongkhags = [\n  \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\",\n  \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n  \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n];\n\nfunction Homestay() {\n  const [user, setUser] = useState(null);\n  const [homestay, setHomestay] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    facilities: \"\",\n    numbedrooms: \"\",\n    numbeds: \"\",\n    availabilitydate: [],\n    location: \"\",\n    googlemapurl: \"\",\n    images: [],\n    pricepernight: \"\",\n  });\n  const [imageFiles, setImageFiles] = useState([]);\n\n  useEffect(() => {\n    async function fetchUser() {\n      const { data, error } = await supabase.auth.getUser();\n      if (error) {\n        console.error(\"Error fetching user:\", error);\n      } else {\n        setUser(data.user);\n        fetchHomestay(data.user.id);\n      }\n    }\n    fetchUser();\n  }, []);\n\n  async function fetchHomestay(userId) {\n    setLoading(true);\n    try {\n      const { data: hostData, error: hostError } = await supabase\n        .from(\"host\")\n        .select(\"hostid\")\n        .eq(\"hostid\", userId)\n        .single();\n\n      if (hostError || !hostData) {\n        console.error(\"Error fetching host ID:\", hostError);\n        setLoading(false);\n        return;\n      }\n\n      const hostId = hostData.hostid;\n\n      const { data, error } = await supabase\n        .from(\"homestay\")\n        .select(\"*\")\n        .eq(\"hostid\", hostId)\n        .single();\n\n      if (error) {\n        console.error(\"Error fetching homestay:\", error);\n      } else {\n        setHomestay(data);\n        setFormData({ ...data, availabilitydate: data.availabilitydate || [] });\n      }\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n    }\n    setLoading(false);\n  }\n\n  function handleChange(e) {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n\n  function handleDateChange(date) {\n    if (!date) return;\n    setFormData(prevState => ({\n      ...prevState,\n      availabilitydate: [...prevState.availabilitydate, date]\n    }));\n  }\n\n  function removeDate(index) {\n    setFormData(prevState => ({\n      ...prevState,\n      availabilitydate: prevState.availabilitydate.filter((_, i) => i !== index)\n    }));\n  }\n\n  async function handleUpdate(e) {\n    e.preventDefault();\n    if (!user || !homestay) return;\n\n    const { error } = await supabase\n      .from(\"homestay\")\n      .update({\n        name: formData.name,\n        description: formData.description,\n        facilities: formData.facilities,\n        availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]),\n        location: formData.location,\n        googlemapurl: formData.googlemapurl,\n        numbedrooms: parseInt(formData.numbedrooms) || 0,\n        numbeds: parseInt(formData.numbeds) || 0,\n        pricepernight: parseFloat(formData.pricepernight) || 0,\n      })\n      .eq(\"hostid\", homestay.hostid);\n\n    if (error) {\n      console.error(\"Error updating homestay:\", error);\n    } else {\n      console.log(\"Homestay updated successfully!\");\n      fetchHomestay(user.id);\n      setIsEditing(false);\n    }\n  }\n\n  if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n  return (\n    <div className=\"flex h-screen\">\n      <Sidebar />\n      <main className=\"flex-1 p-8\">\n        <h2 className=\"text-2xl font-semibold\">Homestay Profile</h2>\n\n        {homestay && !isEditing ? (\n          <div className=\"bg-white shadow-lg p-6 rounded-lg space-y-4\">\n            <h3><span className=\"text-[#8B8B8B]\">Homestay Name:</span> {homestay.name}</h3>\n            <p><span className=\"text-[#8B8B8B]\">Location:</span> {homestay.location}</p>\n            <p><span className=\"text-[#8B8B8B]\">Google Map Location:</span> <a href={homestay.googlemapurl} target=\"_blank\" className=\"text-blue-500\">{homestay.googlemapurl}</a></p>\n            <p><span className=\"text-[#8B8B8B]\">No of bedrooms:</span> {homestay.numbedrooms} &nbsp;&nbsp;&nbsp;&nbsp; <span className=\"text-[#8B8B8B]\">No of beds:</span> {homestay.numbeds}</p>\n            <p><span className=\"text-[#8B8B8B]\">Price per night (Nu.):</span> {homestay.pricepernight}</p>\n            <p><span className=\"text-[#8B8B8B]\">Facilities:</span> {homestay.facilities}</p>\n            <p><span className=\"text-[#8B8B8B]\">Description:</span> {homestay.description}</p>\n            <p><span className=\"text-[#8B8B8B]\">Unavailable Dates:</span> {homestay.availabilitydate?.join(\", \")}</p>\n\n            <button onClick={() => setIsEditing(true)} className=\"bg-blue-500 text-white px-4 py-2 rounded\">Edit</button>\n          </div>\n        ) : (\n          <form onSubmit={handleUpdate} className=\"mt-4 space-y-4\">\n            <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} className=\"w-full border p-2 rounded\" required />\n            <textarea name=\"description\" value={formData.description} onChange={handleChange} className=\"w-full border p-2 rounded\" required />\n            <input type=\"text\" name=\"facilities\" value={formData.facilities} onChange={handleChange} className=\"w-full border p-2 rounded\" required />\n            <input type=\"number\" name=\"numbedrooms\" value={formData.numbedrooms} onChange={handleChange} className=\"w-full border p-2 rounded\" required />\n            <input type=\"number\" name=\"numbeds\" value={formData.numbeds} onChange={handleChange} className=\"w-full border p-2 rounded\" required />\n            <input type=\"number\" name=\"pricepernight\" value={formData.pricepernight} onChange={handleChange} className=\"w-full border p-2 rounded\" required />\n            <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Update</button>\n            <button onClick={() => setIsEditing(false)} className=\"ml-2 bg-gray-500 text-white px-4 py-2 rounded\">Cancel</button>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Homestay;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,OAAOC,OAAO,MAAM,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}