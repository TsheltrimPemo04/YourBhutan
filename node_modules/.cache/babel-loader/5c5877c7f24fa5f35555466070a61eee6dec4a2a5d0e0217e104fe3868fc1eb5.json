{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/auth/Login.jsx\",\n  _s = $RefreshSig$();\nimport { SignIn, useUser } from \"@clerk/clerk-react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    user,\n    isSignedIn\n  } = useUser();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (isSignedIn && user) {\n      checkHostInSupabase();\n    } else {\n      setLoading(false);\n    }\n  }, [isSignedIn, user]);\n\n  /** Check if host exists in Supabase */\n  async function checkHostInSupabase() {\n    setLoading(true);\n    const {\n      data: host,\n      error\n    } = await supabase.from(\"HOST\").select(\"HostId\").eq(\"ClerkUserId\", user.id).single();\n    if (error && error.code !== \"PGRST116\") {\n      console.error(\"Error checking host:\", error);\n      setLoading(false);\n      return;\n    }\n    if (!host) {\n      console.warn(\"Host does not exist in Supabase. Redirecting to signup...\");\n      navigate(\"/host/signup\"); // Redirect to signup if host is not found\n    } else {\n      console.log(\"Host found. Redirecting to dashboard...\");\n      navigate(\"/host/dashboard\", {\n        replace: true\n      });\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SignIn, {\n      routing: \"path\",\n      path: \"/host/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"OlO0C7+OwpEJn0T7C8Zm3rcGmZ0=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["SignIn","useUser","useEffect","useState","useNavigate","supabase","jsxDEV","_jsxDEV","Login","_s","user","isSignedIn","navigate","loading","setLoading","checkHostInSupabase","data","host","error","from","select","eq","id","single","code","console","warn","log","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","routing","path","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/auth/Login.jsx"],"sourcesContent":["import { SignIn, useUser } from \"@clerk/clerk-react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../../utils/supabaseClient\";\n\nfunction Login() {\n  const { user, isSignedIn } = useUser();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (isSignedIn && user) {\n      checkHostInSupabase();\n    } else {\n      setLoading(false);\n    }\n  }, [isSignedIn, user]);\n\n  /** Check if host exists in Supabase */\n  async function checkHostInSupabase() {\n    setLoading(true);\n\n    const { data: host, error } = await supabase\n      .from(\"HOST\")\n      .select(\"HostId\")\n      .eq(\"ClerkUserId\", user.id)\n      .single();\n\n    if (error && error.code !== \"PGRST116\") {\n      console.error(\"Error checking host:\", error);\n      setLoading(false);\n      return;\n    }\n\n    if (!host) {\n      console.warn(\"Host does not exist in Supabase. Redirecting to signup...\");\n      navigate(\"/host/signup\"); // Redirect to signup if host is not found\n    } else {\n      console.log(\"Host found. Redirecting to dashboard...\");\n      navigate(\"/host/dashboard\", { replace: true });\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <SignIn routing=\"path\" path=\"/host/login\" />\n      )}\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,oBAAoB;AACpD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGV,OAAO,CAAC,CAAC;EACtC,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,IAAID,IAAI,EAAE;MACtBK,mBAAmB,CAAC,CAAC;IACvB,CAAC,MAAM;MACLD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACH,UAAU,EAAED,IAAI,CAAC,CAAC;;EAEtB;EACA,eAAeK,mBAAmBA,CAAA,EAAG;IACnCD,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAM;MAAEE,IAAI,EAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMb,QAAQ,CACzCc,IAAI,CAAC,MAAM,CAAC,CACZC,MAAM,CAAC,QAAQ,CAAC,CAChBC,EAAE,CAAC,aAAa,EAAEX,IAAI,CAACY,EAAE,CAAC,CAC1BC,MAAM,CAAC,CAAC;IAEX,IAAIL,KAAK,IAAIA,KAAK,CAACM,IAAI,KAAK,UAAU,EAAE;MACtCC,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CJ,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI,CAACG,IAAI,EAAE;MACTQ,OAAO,CAACC,IAAI,CAAC,2DAA2D,CAAC;MACzEd,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLa,OAAO,CAACE,GAAG,CAAC,yCAAyC,CAAC;MACtDf,QAAQ,CAAC,iBAAiB,EAAE;QAAEgB,OAAO,EAAE;MAAK,CAAC,CAAC;IAChD;IAEAd,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,oBACEP,OAAA;IAAKsB,SAAS,EAAC,2CAA2C;IAAAC,QAAA,EACvDjB,OAAO,gBACNN,OAAA;MAAAuB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB3B,OAAA,CAACP,MAAM;MAACmC,OAAO,EAAC,MAAM;MAACC,IAAI,EAAC;IAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC5C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CAjDQD,KAAK;EAAA,QACiBP,OAAO,EACnBG,WAAW;AAAA;AAAAiC,EAAA,GAFrB7B,KAAK;AAmDd,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}