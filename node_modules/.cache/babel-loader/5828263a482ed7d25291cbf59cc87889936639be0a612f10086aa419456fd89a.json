{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/auth/Signup.jsx\",\n  _s = $RefreshSig$();\n// import { SignUp, useUser } from \"@clerk/clerk-react\";\n// import { useEffect } from \"react\";\n// import { supabase } from \"../../utils/supabaseClient\";\n\n// function HostSignup() {\n//   const { user, isSignedIn } = useUser();\n\n//   useEffect(() => {\n//     if (isSignedIn && user) {\n//       console.log(\"User from Clerk:\", user); // ✅ Debugging\n//       saveHostToSupabase(user);\n//     }\n//   }, [user, isSignedIn]);\n\n//   async function saveHostToSupabase(user) {\n//     if (!user) return;\n\n//     // Step 1: Check if the host already exists in Supabase\n//     const { data: existingHost, error: fetchError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"clerkuserid\", user.id)\n//       .single();\n\n//     if (fetchError && fetchError.code !== \"PGRST116\") {\n//       console.error(\"Error checking host existence:\", fetchError);\n//       return;\n//     }\n\n//     if (existingHost) {\n//       console.log(\"Host already exists in Supabase:\", existingHost);\n//       return;\n//     }\n\n//     // Step 2: Insert new host into Supabase\n//     const { data, error } = await supabase.from(\"host\").insert([\n//       {\n//         ClerkUserId: user.id,\n//         HostName: user.fullName || \"Unknown Host\",\n//         HostEmail: user.primaryEmailAddress?.emailAddress || \"no-email\",\n//         HostContact: null, // You can update this later\n//       }\n//     ]).select();\n\n//     if (error) {\n//       console.error(\"Error saving host:\", error);\n//     } else {\n//       console.log(\"Host saved successfully:\", data);\n//     }\n//   }\n\n//   return (\n//     <div className=\"flex justify-center items-center h-screen\">\n//       <SignUp routing=\"path\" path=\"/host/signup\" />\n//     </div>\n//   );\n// }\n\n// export default HostSignup;\n\nimport { useState } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HostSignup() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    fullName: \"\",\n    contact: \"\"\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  function handleChange(e) {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n  async function handleSignup(e) {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Step 1: Register the host in Supabase Auth\n    const {\n      data,\n      error: signUpError\n    } = await supabase.auth.signUp({\n      email: formData.email,\n      password: formData.password\n    });\n    if (signUpError) {\n      setError(signUpError.message);\n      setLoading(false);\n      return;\n    }\n    console.log(\"Supabase Auth User:\", data);\n\n    // Step 2: Save user details in the \"host\" table\n    const user = data.user; // Get the newly created user\n\n    if (user) {\n      const {\n        error: insertError\n      } = await supabase.from(\"host\").insert([{\n        HostId: user.id,\n        // This is now Supabase's user ID\n        HostName: formData.fullName,\n        HostEmail: formData.email,\n        HostContact: formData.contact || null\n      }]);\n      if (insertError) {\n        setError(\"Error saving host: \" + insertError.message);\n      } else {\n        setSuccess(true);\n      }\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignup,\n      className: \"w-96 p-6 bg-white shadow-lg rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Host Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500\",\n        children: \"Sign-up successful! Check your email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fullName\",\n        placeholder: \"Full Name\",\n        value: formData.fullName,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full border p-2 rounded mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full border p-2 rounded mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full border p-2 rounded mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        placeholder: \"Contact (optional)\",\n        value: formData.contact,\n        onChange: handleChange,\n        className: \"w-full border p-2 rounded mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-green-500 text-white px-4 py-2 rounded\",\n        disabled: loading,\n        children: loading ? \"Signing Up...\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(HostSignup, \"l83KTmHD8G1P/24KBLb8JRSyCRk=\");\n_c = HostSignup;\nexport default HostSignup;\nvar _c;\n$RefreshReg$(_c, \"HostSignup\");","map":{"version":3,"names":["useState","supabase","jsxDEV","_jsxDEV","HostSignup","_s","formData","setFormData","email","password","fullName","contact","error","setError","loading","setLoading","success","setSuccess","handleChange","e","target","name","value","handleSignup","preventDefault","data","signUpError","auth","signUp","message","console","log","user","insertError","from","insert","HostId","id","HostName","HostEmail","HostContact","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/auth/Signup.jsx"],"sourcesContent":["// import { SignUp, useUser } from \"@clerk/clerk-react\";\n// import { useEffect } from \"react\";\n// import { supabase } from \"../../utils/supabaseClient\";\n\n// function HostSignup() {\n//   const { user, isSignedIn } = useUser();\n\n//   useEffect(() => {\n//     if (isSignedIn && user) {\n//       console.log(\"User from Clerk:\", user); // ✅ Debugging\n//       saveHostToSupabase(user);\n//     }\n//   }, [user, isSignedIn]);\n\n//   async function saveHostToSupabase(user) {\n//     if (!user) return;\n\n//     // Step 1: Check if the host already exists in Supabase\n//     const { data: existingHost, error: fetchError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"clerkuserid\", user.id)\n//       .single();\n\n//     if (fetchError && fetchError.code !== \"PGRST116\") {\n//       console.error(\"Error checking host existence:\", fetchError);\n//       return;\n//     }\n\n//     if (existingHost) {\n//       console.log(\"Host already exists in Supabase:\", existingHost);\n//       return;\n//     }\n\n//     // Step 2: Insert new host into Supabase\n//     const { data, error } = await supabase.from(\"host\").insert([\n//       {\n//         ClerkUserId: user.id,\n//         HostName: user.fullName || \"Unknown Host\",\n//         HostEmail: user.primaryEmailAddress?.emailAddress || \"no-email\",\n//         HostContact: null, // You can update this later\n//       }\n//     ]).select();\n\n//     if (error) {\n//       console.error(\"Error saving host:\", error);\n//     } else {\n//       console.log(\"Host saved successfully:\", data);\n//     }\n//   }\n\n//   return (\n//     <div className=\"flex justify-center items-center h-screen\">\n//       <SignUp routing=\"path\" path=\"/host/signup\" />\n//     </div>\n//   );\n// }\n\n// export default HostSignup;\n\n\nimport { useState } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\n\nfunction HostSignup() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    fullName: \"\",\n    contact: \"\",\n  });\n\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  function handleChange(e) {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n\n  async function handleSignup(e) {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    \n    // Step 1: Register the host in Supabase Auth\n    const { data, error: signUpError } = await supabase.auth.signUp({\n      email: formData.email,\n      password: formData.password,\n    });\n\n    if (signUpError) {\n      setError(signUpError.message);\n      setLoading(false);\n      return;\n    }\n\n    console.log(\"Supabase Auth User:\", data);\n\n    // Step 2: Save user details in the \"host\" table\n    const user = data.user; // Get the newly created user\n\n    if (user) {\n      const { error: insertError } = await supabase\n        .from(\"host\")\n        .insert([\n          {\n            HostId: user.id, // This is now Supabase's user ID\n            HostName: formData.fullName,\n            HostEmail: formData.email,\n            HostContact: formData.contact || null,\n          }\n        ]);\n\n      if (insertError) {\n        setError(\"Error saving host: \" + insertError.message);\n      } else {\n        setSuccess(true);\n      }\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      <form onSubmit={handleSignup} className=\"w-96 p-6 bg-white shadow-lg rounded-lg\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Host Sign Up</h2>\n\n        {error && <p className=\"text-red-500\">{error}</p>}\n        {success && <p className=\"text-green-500\">Sign-up successful! Check your email.</p>}\n\n        <input\n          type=\"text\"\n          name=\"fullName\"\n          placeholder=\"Full Name\"\n          value={formData.fullName}\n          onChange={handleChange}\n          required\n          className=\"w-full border p-2 rounded mb-2\"\n        />\n\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={formData.email}\n          onChange={handleChange}\n          required\n          className=\"w-full border p-2 rounded mb-2\"\n        />\n\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n          className=\"w-full border p-2 rounded mb-2\"\n        />\n\n        <input\n          type=\"text\"\n          name=\"contact\"\n          placeholder=\"Contact (optional)\"\n          value={formData.contact}\n          onChange={handleChange}\n          className=\"w-full border p-2 rounded mb-2\"\n        />\n\n        <button\n          type=\"submit\"\n          className=\"w-full bg-green-500 text-white px-4 py-2 rounded\"\n          disabled={loading}\n        >\n          {loading ? \"Signing Up...\" : \"Sign Up\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default HostSignup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}