{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/auth/Signup.jsx\",\n  _s = $RefreshSig$();\nimport { SignUp, useUser } from \"@clerk/clerk-react\";\nimport { useEffect } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HostSignup() {\n  _s();\n  const {\n    user,\n    isSignedIn\n  } = useUser();\n  useEffect(() => {\n    if (isSignedIn) {\n      saveHostToSupabase(user);\n    }\n  }, [isSignedIn, user]);\n  async function saveHostToSupabase(user) {\n    // Check if host already exists\n    const {\n      data: existingHost\n    } = await supabase.from(\"hosts\").select(\"host_id\").eq(\"clerk_user_id\", user.id).single();\n    if (existingHost) {\n      console.log(\"Host already exists in Supabase:\", existingHost);\n      return;\n    }\n\n    // Insert new host into Supabase\n    const {\n      data,\n      error\n    } = await supabase.from(\"hosts\").insert([{\n      clerk_user_id: user.id,\n      host_name: user.fullName,\n      host_email: user.primaryEmailAddress.emailAddress\n    }]);\n    if (error) {\n      console.error(\"Error saving host:\", error);\n    } else {\n      console.log(\"Host saved successfully:\", data);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(SignUp, {\n      routing: \"path\",\n      path: \"/host/signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(HostSignup, \"ixu2BTDxOtGHm9+BAyYNwv6i3Aw=\", false, function () {\n  return [useUser];\n});\n_c = HostSignup;\nexport default HostSignup;\nvar _c;\n$RefreshReg$(_c, \"HostSignup\");","map":{"version":3,"names":["SignUp","useUser","useEffect","supabase","jsxDEV","_jsxDEV","HostSignup","_s","user","isSignedIn","saveHostToSupabase","data","existingHost","from","select","eq","id","single","console","log","error","insert","clerk_user_id","host_name","fullName","host_email","primaryEmailAddress","emailAddress","className","children","routing","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/auth/Signup.jsx"],"sourcesContent":["import { SignUp, useUser } from \"@clerk/clerk-react\";\nimport { useEffect } from \"react\";\nimport { supabase } from \"../../utils/supabaseClient\";\n\nfunction HostSignup() {\n  const { user, isSignedIn } = useUser();\n\n  useEffect(() => {\n    if (isSignedIn) {\n      saveHostToSupabase(user);\n    }\n  }, [isSignedIn, user]);\n\n  async function saveHostToSupabase(user) {\n    // Check if host already exists\n    const { data: existingHost } = await supabase\n      .from(\"hosts\")\n      .select(\"host_id\")\n      .eq(\"clerk_user_id\", user.id)\n      .single();\n\n    if (existingHost) {\n      console.log(\"Host already exists in Supabase:\", existingHost);\n      return;\n    }\n\n    // Insert new host into Supabase\n    const { data, error } = await supabase.from(\"hosts\").insert([\n      {\n        clerk_user_id: user.id,\n        host_name: user.fullName,\n        host_email: user.primaryEmailAddress.emailAddress,\n      },\n    ]);\n\n    if (error) {\n      console.error(\"Error saving host:\", error);\n    } else {\n      console.log(\"Host saved successfully:\", data);\n    }\n  }\n\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      <SignUp routing=\"path\" path=\"/host/signup\" />\n    </div>\n  );\n}\n\nexport default HostSignup;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,oBAAoB;AACpD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGR,OAAO,CAAC,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,EAAE;MACdC,kBAAkB,CAACF,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,CAACC,UAAU,EAAED,IAAI,CAAC,CAAC;EAEtB,eAAeE,kBAAkBA,CAACF,IAAI,EAAE;IACtC;IACA,MAAM;MAAEG,IAAI,EAAEC;IAAa,CAAC,GAAG,MAAMT,QAAQ,CAC1CU,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,SAAS,CAAC,CACjBC,EAAE,CAAC,eAAe,EAAEP,IAAI,CAACQ,EAAE,CAAC,CAC5BC,MAAM,CAAC,CAAC;IAEX,IAAIL,YAAY,EAAE;MAChBM,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEP,YAAY,CAAC;MAC7D;IACF;;IAEA;IACA,MAAM;MAAED,IAAI;MAAES;IAAM,CAAC,GAAG,MAAMjB,QAAQ,CAACU,IAAI,CAAC,OAAO,CAAC,CAACQ,MAAM,CAAC,CAC1D;MACEC,aAAa,EAAEd,IAAI,CAACQ,EAAE;MACtBO,SAAS,EAAEf,IAAI,CAACgB,QAAQ;MACxBC,UAAU,EAAEjB,IAAI,CAACkB,mBAAmB,CAACC;IACvC,CAAC,CACF,CAAC;IAEF,IAAIP,KAAK,EAAE;MACTF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAER,IAAI,CAAC;IAC/C;EACF;EAEA,oBACEN,OAAA;IAAKuB,SAAS,EAAC,2CAA2C;IAAAC,QAAA,eACxDxB,OAAA,CAACL,MAAM;MAAC8B,OAAO,EAAC,MAAM;MAACC,IAAI,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAAC5B,EAAA,CA3CQD,UAAU;EAAA,QACYL,OAAO;AAAA;AAAAmC,EAAA,GAD7B9B,UAAU;AA6CnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}