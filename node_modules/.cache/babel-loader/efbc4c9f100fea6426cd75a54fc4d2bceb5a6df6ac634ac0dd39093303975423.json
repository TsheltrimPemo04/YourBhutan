{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/Hotel.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport data from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Hotel = ({\n  chatbotVisible\n}) => {\n  _s();\n  // Use the useLocation hook to get the current location object\n  const location = useLocation();\n\n  // Filter the data array to include only items with type 'hotel'\n  const hotelData = data.filter(card => card.type === \"hotel\");\n\n  // Check if the URL contains the query parameter 'phobjikha'\n  const isPhobjikhaSearch = location.search.includes(\"phobjikha\");\n\n  // Sort the hotelData array based on the 'isPhobjikhaSearch' flag\n  hotelData.sort((a, b) => {\n    if (isPhobjikhaSearch) {\n      if (a.location === \"Phobjikha, Bhutan\") {\n        return -1; // 'a' comes before 'b'\n      } else if (b.location === \"Phobjikha, Bhutan\") {\n        return 1; // 'b' comes before 'a'\n      }\n    }\n\n    return 0; // no change in order for other locations or when 'isPhobjikhaSearch' is false\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-between overflow-hidden w-full gap-y-12\",\n      children: hotelData.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        data: card,\n        chatbotVisible: chatbotVisible\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Hotel, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Hotel;\nexport default Hotel;\nvar _c;\n$RefreshReg$(_c, \"Hotel\");","map":{"version":3,"names":["React","useLocation","Card","data","jsxDEV","_jsxDEV","Fragment","_Fragment","Hotel","chatbotVisible","_s","location","hotelData","filter","card","type","isPhobjikhaSearch","search","includes","sort","a","b","children","className","map","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/Hotel.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport data from \"../data/data\";\n\nconst Hotel = ({ chatbotVisible }) => {\n  // Use the useLocation hook to get the current location object\n  const location = useLocation();\n\n  // Filter the data array to include only items with type 'hotel'\n  const hotelData = data.filter((card) => card.type === \"hotel\");\n\n  // Check if the URL contains the query parameter 'phobjikha'\n  const isPhobjikhaSearch = location.search.includes(\"phobjikha\");\n\n  // Sort the hotelData array based on the 'isPhobjikhaSearch' flag\n  hotelData.sort((a, b) => {\n    if (isPhobjikhaSearch) {\n      if (a.location === \"Phobjikha, Bhutan\") {\n        return -1; // 'a' comes before 'b'\n      } else if (b.location === \"Phobjikha, Bhutan\") {\n        return 1; // 'b' comes before 'a'\n      }\n    }\n    return 0; // no change in order for other locations or when 'isPhobjikhaSearch' is false\n  });\n\n  return (\n    <>\n      <div className=\"flex flex-wrap justify-between overflow-hidden w-full gap-y-12\">\n        {hotelData.map((card, index) => (\n          <Card key={index} data={card} chatbotVisible={chatbotVisible} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Hotel;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACpC;EACA,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,SAAS,GAAGT,IAAI,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC;;EAE9D;EACA,MAAMC,iBAAiB,GAAGL,QAAQ,CAACM,MAAM,CAACC,QAAQ,CAAC,WAAW,CAAC;;EAE/D;EACAN,SAAS,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACvB,IAAIL,iBAAiB,EAAE;MACrB,IAAII,CAAC,CAACT,QAAQ,KAAK,mBAAmB,EAAE;QACtC,OAAO,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,MAAM,IAAIU,CAAC,CAACV,QAAQ,KAAK,mBAAmB,EAAE;QAC7C,OAAO,CAAC,CAAC,CAAC;MACZ;IACF;;IACA,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC;;EAEF,oBACEN,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,gEAAgE;MAAAD,QAAA,EAC5EV,SAAS,CAACY,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBACzBpB,OAAA,CAACH,IAAI;QAAaC,IAAI,EAAEW,IAAK;QAACL,cAAc,EAAEA;MAAe,GAAlDgB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+C,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACnB,EAAA,CA/BIF,KAAK;EAAA,QAEQP,WAAW;AAAA;AAAA6B,EAAA,GAFxBtB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}