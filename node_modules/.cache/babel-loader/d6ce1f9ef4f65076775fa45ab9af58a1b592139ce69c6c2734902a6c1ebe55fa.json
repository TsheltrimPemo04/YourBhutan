{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/host/Homestay.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useUser } from \"@clerk/clerk-react\";\n// import { supabase } from \"../../utils/supabaseClient\";\n// import Sidebar from \"../../components/Sidebar\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// const dzongkhags = [\n//   \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \n//   \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n//   \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n// ];\n\n// function Homestay() {\n//   const { user } = useUser();\n//   const [homestay, setHomestay] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     facilities: \"\",\n//     availabilitydate: [],\n//     location: \"\",\n//     googlemapurl: \"\",\n//     images: \"\",\n//     pricepernight: \"\",\n//   });\n\n//   useEffect(() => {\n//     if (user) {\n//       fetchHomestay();\n//     }\n//   }, [user]); // ✅ Depend only on `user` to prevent infinite loops\n\n//   /** Fetch the homestay for the logged-in host */\n//   async function fetchHomestay() {\n//     setLoading(true);\n//     try {\n//       // Fetch the correct host ID from Supabase\n//       const { data: hostData, error: hostError } = await supabase\n//         .from(\"host\") // Ensure this is the correct table\n//         .select(\"hostid\")\n//         .eq(\"clerkuserid\", user.id) // Match Clerk user ID with Supabase field\n//         .single();\n\n//       if (hostError || !hostData) {\n//         console.error(\"Error fetching host ID:\", hostError);\n//         setLoading(false);\n//         return;\n//       }\n\n//       const hostId = hostData.hostid; // ✅ This is the correct UUID\n\n//       // Now fetch the homestay with the correct hostId\n//       const { data, error } = await supabase\n//         .from(\"homestay\")\n//         .select(\"*\")\n//         .eq(\"hostid\", hostId) // Use the correct UUID\n//         .single();\n\n//       if (error) {\n//         console.error(\"Error fetching homestay:\", error);\n//       } else {\n//         console.log(\"Fetched homestay:\", data);\n//         setHomestay(data);\n//       }\n//     } catch (err) {\n//       console.error(\"Unexpected error:\", err);\n//     }\n//     setLoading(false);\n//   }\n\n//   /** Handle form input changes */\n//   function handleChange(e) {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   }\n\n//   /** Handle availability date selection */\n//   function handleDateChange(date) {\n//     if (!date) return; // Avoid null errors\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: [...prevState.availabilitydate, date] // Append date to array\n//     }));\n//   }\n\n//   function removeDate(index) {\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: prevState.availabilitydate.filter((_, i) => i !== index)\n//     }));\n//   }\n\n//   /** Handle homestay submission */\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     if (!user) return;\n\n//     // Fetch the correct host ID from Supabase\n//     const { data: hostData, error: hostError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"clerkuserid\", user.id)\n//       .single();\n\n//     if (hostError || !hostData) {\n//       console.error(\"Error fetching host ID:\", hostError);\n//       return;\n//     }\n\n//     const hostId = hostData.hostid; // ✅ Use UUID from Supabase, not Clerk user ID\n\n//     // Insert homestay using correct hostid\n//     const { error } = await supabase.from(\"homestay\").insert([\n//       {\n//         hostid: hostId, // ✅ Ensure this is a UUID\n//         name: formData.name,\n//         description: formData.description,\n//         facilities: formData.facilities,\n//         availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]), // Convert to YYYY-MM-DD\n//         location: formData.location,\n//         googlemapurl: formData.googlemapurl,\n//         images: formData.images.split(\",\"), \n//         pricepernight: formData.pricepernight,\n//       },\n//     ]);\n\n//     if (error) {\n//       console.error(\"Error adding homestay:\", error);\n//     } else {\n//       console.log(\"Homestay added successfully!\");\n//       fetchHomestay(); // ✅ Force UI update after insertion\n//     }\n//   }\n\n//   if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n//   return (\n//     <div className=\"flex h-screen\">\n//       <Sidebar />\n//       <main className=\"flex-1 p-8\">\n//         <h2 className=\"text-2xl font-semibold\">Homestay Management</h2>\n\n//         {homestay ? (\n//           <div className=\"mt-6\">\n//             <h3 className=\"text-xl font-semibold\">{homestay.name}</h3>\n//             <p className=\"text-gray-600 mt-2\">{homestay.description}</p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Facilities:</strong> {homestay.facilities}</p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Availability Dates:</strong> {homestay.availabilitydate.join(\", \")}</p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Location:</strong> {homestay.location}</p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Google Map:</strong> <a href={homestay.googlemapurl} target=\"_blank\" rel=\"noopener noreferrer\">View on Google Maps</a></p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Price per Night:</strong> Nu. {homestay.pricepernight}</p>\n//             <div className=\"mt-4\">\n//               <h4 className=\"text-lg font-semibold\">Images</h4>\n//               <div className=\"flex gap-2 mt-2\">\n//                 {homestay.images.map((img, index) => (\n//                   <img key={index} src={img} alt=\"Homestay\" className=\"w-32 h-32 object-cover rounded-lg\" />\n//                 ))}\n//               </div>\n//             </div>\n//             <button className=\"bg-blue-500 text-white px-4 py-2 rounded mt-4\">Edit</button>\n//           </div>\n//         ) : (\n//           <div className=\"mt-6\">\n//             <p className=\"text-gray-600\">You have not listed any homestay yet. Add your homestay below:</p>\n//             <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\n//               <input type=\"text\" name=\"name\" placeholder=\"Homestay Name\" className=\"w-full border p-2 rounded\" value={formData.name} onChange={handleChange} required />\n//               <textarea name=\"description\" placeholder=\"Description\" className=\"w-full border p-2 rounded\" value={formData.description} onChange={handleChange} required />\n//               <input type=\"text\" name=\"facilities\" placeholder=\"Facilities (comma-separated)\" className=\"w-full border p-2 rounded\" value={formData.facilities} onChange={handleChange} required />\n\n//             {/* Multi-Date Availability Selection */}\n//             <div>\n//               <label className=\"block text-gray-700 font-semibold\">Availability Dates:</label>\n//               <DatePicker\n//                 selected={null}\n//                 onChange={(date) => {\n//                   if (date) {\n//                     setFormData(prevState => ({\n//                       ...prevState,\n//                       availabilitydate: [...prevState.availabilitydate, date]\n//                     }));\n//                   }\n//                 }}\n//                 dateFormat=\"yyyy-MM-dd\"\n//                 className=\"w-full border p-2 rounded\"\n//                 placeholderText=\"Select available dates\"\n//               />\n\n//               {/* Display Selected Dates */}\n//               <div className=\"mt-2 flex flex-wrap gap-2\">\n//                 {formData.availabilitydate.map((date, index) => (\n//                   <div key={index} className=\"flex items-center bg-gray-200 px-2 py-1 rounded\">\n//                     <span>{date.toISOString().split(\"T\")[0]}</span>\n//                     <button\n//                       type=\"button\"\n//                       className=\"ml-2 text-red-500\"\n//                       onClick={() => removeDate(index)}\n//                     >\n//                       ❌\n//                     </button>\n//                   </div>\n//                 ))}\n//               </div>\n//             </div>\n\n//               {/* Location Dropdown */}\n//               <select\n//                 name=\"location\"\n//                 value={formData.location}\n//                 onChange={handleChange}\n//                 className=\"w-full border p-2 rounded\"\n//                 required\n//               >\n//                 <option value=\"\" disabled>Select Dzongkhag</option>\n//                 {dzongkhags.map((dzongkhag, index) => (\n//                   <option key={index} value={dzongkhag}>{dzongkhag}</option>\n//                 ))}\n//               </select>\n\n//               <input type=\"text\" name=\"googlemapurl\" placeholder=\"Google Map URL\" className=\"w-full border p-2 rounded\" value={formData.googlemapurl} onChange={handleChange} required />\n//               <input type=\"text\" name=\"images\" placeholder=\"Image URLs (comma-separated)\" className=\"w-full border p-2 rounded\" value={formData.images} onChange={handleChange} required />\n//               <input type=\"number\" name=\"pricepernight\" placeholder=\"Price per Night (Nu.)\" className=\"w-full border p-2 rounded\" value={formData.pricepernight} onChange={handleChange} required />\n\n//               <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Add Homestay</button>\n//             </form>\n//           </div>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default Homestay;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useUser } from \"@clerk/clerk-react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport Sidebar from \"../../components/Sidebar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dzongkhags = [\"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\", \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"];\nfunction Homestay() {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [homestay, setHomestay] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    facilities: \"\",\n    availabilitydate: [],\n    location: \"\",\n    googlemapurl: \"\",\n    images: [],\n    // Store uploaded images\n    pricepernight: \"\"\n  });\n  useEffect(() => {\n    if (user) {\n      fetchHomestay();\n    }\n  }, [user]);\n  async function fetchHomestay() {\n    setLoading(true);\n    try {\n      const {\n        data: hostData,\n        error: hostError\n      } = await supabase.from(\"host\").select(\"hostid\").eq(\"clerkuserid\", user.id).single();\n      if (hostError || !hostData) {\n        console.error(\"Error fetching host ID:\", hostError);\n        setLoading(false);\n        return;\n      }\n      const hostId = hostData.hostid;\n      const {\n        data,\n        error\n      } = await supabase.from(\"homestay\").select(\"*\").eq(\"hostid\", hostId).single();\n      if (error) {\n        console.error(\"Error fetching homestay:\", error);\n      } else {\n        console.log(\"Fetched homestay:\", data);\n        setHomestay(data);\n        setFormData({\n          name: data.name || \"\",\n          description: data.description || \"\",\n          facilities: data.facilities || \"\",\n          availabilitydate: data.availabilitydate || [],\n          location: data.location || \"\",\n          googlemapurl: data.googlemapurl || \"\",\n          images: data.images || [],\n          pricepernight: data.pricepernight || \"\"\n        });\n      }\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n    }\n    setLoading(false);\n  }\n  async function handleImageUpload(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n    const fileName = `${user.id}-${Date.now()}-${file.name}`; // Unique filename\n    const {\n      data,\n      error\n    } = await supabase.storage.from(\"homestay-images\").upload(fileName, file);\n    if (error) {\n      console.error(\"Error uploading image:\", error);\n      return;\n    }\n    const {\n      data: publicUrl\n    } = supabase.storage.from(\"homestay-images\").getPublicUrl(fileName);\n    setFormData(prevState => ({\n      ...prevState,\n      images: [...prevState.images, publicUrl.publicUrl] // Append uploaded image URL\n    }));\n\n    console.log(\"Uploaded Image URL:\", publicUrl.publicUrl);\n  }\n  function handleChange(e) {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!user) return;\n    const {\n      data: hostData,\n      error: hostError\n    } = await supabase.from(\"host\").select(\"hostid\").eq(\"clerkuserid\", user.id).single();\n    if (hostError || !hostData) {\n      console.error(\"Error fetching host ID:\", hostError);\n      return;\n    }\n    const hostId = hostData.hostid;\n    const {\n      error\n    } = await supabase.from(\"homestay\").insert([{\n      hostid: hostId,\n      name: formData.name,\n      description: formData.description,\n      facilities: formData.facilities,\n      availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]),\n      location: formData.location,\n      googlemapurl: formData.googlemapurl,\n      images: formData.images,\n      pricepernight: formData.pricepernight\n    }]);\n    if (error) {\n      console.error(\"Error adding homestay:\", error);\n    } else {\n      console.log(\"Homestay added successfully!\");\n      fetchHomestay();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold\",\n        children: \"Homestay Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), homestay ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold\",\n          children: homestay.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: homestay.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Facilities:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 47\n          }, this), \" \", homestay.facilities]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Availability Dates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 47\n          }, this), \" \", homestay.availabilitydate.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 47\n          }, this), \" \", homestay.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Google Map:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 47\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: homestay.googlemapurl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View on Google Maps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 76\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price per Night:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 47\n          }, this), \" Nu. \", homestay.pricepernight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-lg font-semibold\",\n            children: \"Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 mt-2\",\n            children: homestay.images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img,\n              alt: \"Homestay\",\n              className: \"w-32 h-32 object-cover rounded-lg\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"You have not listed any homestay yet. Add your homestay below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"mt-4 space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Homestay Name\",\n            className: \"w-full border p-2 rounded\",\n            value: formData.name,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            placeholder: \"Description\",\n            className: \"w-full border p-2 rounded\",\n            value: formData.description,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"facilities\",\n            placeholder: \"Facilities\",\n            className: \"w-full border p-2 rounded\",\n            value: formData.facilities,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleImageUpload,\n            className: \"w-full border p-2 rounded\",\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 mt-2\",\n            children: formData.images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img,\n              alt: \"Homestay\",\n              className: \"w-20 h-20 object-cover rounded-lg\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-green-500 text-white px-4 py-2 rounded\",\n            children: \"Add Homestay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n}\n_s(Homestay, \"SAFCPd5YeizbsCuU4fP6mjl241k=\", false, function () {\n  return [useUser];\n});\n_c = Homestay;\nexport default Homestay;\nvar _c;\n$RefreshReg$(_c, \"Homestay\");","map":{"version":3,"names":["React","useEffect","useState","useUser","supabase","Sidebar","DatePicker","jsxDEV","_jsxDEV","dzongkhags","Homestay","_s","user","homestay","setHomestay","loading","setLoading","formData","setFormData","name","description","facilities","availabilitydate","location","googlemapurl","images","pricepernight","fetchHomestay","data","hostData","error","hostError","from","select","eq","id","single","console","hostId","hostid","log","err","handleImageUpload","event","file","target","files","fileName","Date","now","storage","upload","publicUrl","getPublicUrl","prevState","handleChange","e","value","handleSubmit","preventDefault","insert","map","date","toISOString","split","className","children","_jsxFileName","lineNumber","columnNumber","join","href","rel","img","index","src","alt","onSubmit","type","placeholder","onChange","required","accept","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/host/Homestay.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { useUser } from \"@clerk/clerk-react\";\n// import { supabase } from \"../../utils/supabaseClient\";\n// import Sidebar from \"../../components/Sidebar\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// const dzongkhags = [\n//   \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \n//   \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n//   \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n// ];\n\n// function Homestay() {\n//   const { user } = useUser();\n//   const [homestay, setHomestay] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     facilities: \"\",\n//     availabilitydate: [],\n//     location: \"\",\n//     googlemapurl: \"\",\n//     images: \"\",\n//     pricepernight: \"\",\n//   });\n\n//   useEffect(() => {\n//     if (user) {\n//       fetchHomestay();\n//     }\n//   }, [user]); // ✅ Depend only on `user` to prevent infinite loops\n\n//   /** Fetch the homestay for the logged-in host */\n//   async function fetchHomestay() {\n//     setLoading(true);\n//     try {\n//       // Fetch the correct host ID from Supabase\n//       const { data: hostData, error: hostError } = await supabase\n//         .from(\"host\") // Ensure this is the correct table\n//         .select(\"hostid\")\n//         .eq(\"clerkuserid\", user.id) // Match Clerk user ID with Supabase field\n//         .single();\n  \n//       if (hostError || !hostData) {\n//         console.error(\"Error fetching host ID:\", hostError);\n//         setLoading(false);\n//         return;\n//       }\n  \n//       const hostId = hostData.hostid; // ✅ This is the correct UUID\n  \n//       // Now fetch the homestay with the correct hostId\n//       const { data, error } = await supabase\n//         .from(\"homestay\")\n//         .select(\"*\")\n//         .eq(\"hostid\", hostId) // Use the correct UUID\n//         .single();\n  \n//       if (error) {\n//         console.error(\"Error fetching homestay:\", error);\n//       } else {\n//         console.log(\"Fetched homestay:\", data);\n//         setHomestay(data);\n//       }\n//     } catch (err) {\n//       console.error(\"Unexpected error:\", err);\n//     }\n//     setLoading(false);\n//   }\n  \n  \n  \n\n//   /** Handle form input changes */\n//   function handleChange(e) {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   }\n\n//   /** Handle availability date selection */\n//   function handleDateChange(date) {\n//     if (!date) return; // Avoid null errors\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: [...prevState.availabilitydate, date] // Append date to array\n//     }));\n//   }\n  \n//   function removeDate(index) {\n//     setFormData(prevState => ({\n//       ...prevState,\n//       availabilitydate: prevState.availabilitydate.filter((_, i) => i !== index)\n//     }));\n//   }\n  \n//   /** Handle homestay submission */\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     if (!user) return;\n  \n//     // Fetch the correct host ID from Supabase\n//     const { data: hostData, error: hostError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"clerkuserid\", user.id)\n//       .single();\n  \n//     if (hostError || !hostData) {\n//       console.error(\"Error fetching host ID:\", hostError);\n//       return;\n//     }\n  \n//     const hostId = hostData.hostid; // ✅ Use UUID from Supabase, not Clerk user ID\n  \n//     // Insert homestay using correct hostid\n//     const { error } = await supabase.from(\"homestay\").insert([\n//       {\n//         hostid: hostId, // ✅ Ensure this is a UUID\n//         name: formData.name,\n//         description: formData.description,\n//         facilities: formData.facilities,\n//         availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]), // Convert to YYYY-MM-DD\n//         location: formData.location,\n//         googlemapurl: formData.googlemapurl,\n//         images: formData.images.split(\",\"), \n//         pricepernight: formData.pricepernight,\n//       },\n//     ]);\n  \n//     if (error) {\n//       console.error(\"Error adding homestay:\", error);\n//     } else {\n//       console.log(\"Homestay added successfully!\");\n//       fetchHomestay(); // ✅ Force UI update after insertion\n//     }\n//   }\n  \n  \n\n//   if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n//   return (\n//     <div className=\"flex h-screen\">\n//       <Sidebar />\n//       <main className=\"flex-1 p-8\">\n//         <h2 className=\"text-2xl font-semibold\">Homestay Management</h2>\n\n//         {homestay ? (\n//           <div className=\"mt-6\">\n//             <h3 className=\"text-xl font-semibold\">{homestay.name}</h3>\n//             <p className=\"text-gray-600 mt-2\">{homestay.description}</p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Facilities:</strong> {homestay.facilities}</p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Availability Dates:</strong> {homestay.availabilitydate.join(\", \")}</p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Location:</strong> {homestay.location}</p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Google Map:</strong> <a href={homestay.googlemapurl} target=\"_blank\" rel=\"noopener noreferrer\">View on Google Maps</a></p>\n//             <p className=\"text-gray-600 mt-2\"><strong>Price per Night:</strong> Nu. {homestay.pricepernight}</p>\n//             <div className=\"mt-4\">\n//               <h4 className=\"text-lg font-semibold\">Images</h4>\n//               <div className=\"flex gap-2 mt-2\">\n//                 {homestay.images.map((img, index) => (\n//                   <img key={index} src={img} alt=\"Homestay\" className=\"w-32 h-32 object-cover rounded-lg\" />\n//                 ))}\n//               </div>\n//             </div>\n//             <button className=\"bg-blue-500 text-white px-4 py-2 rounded mt-4\">Edit</button>\n//           </div>\n//         ) : (\n//           <div className=\"mt-6\">\n//             <p className=\"text-gray-600\">You have not listed any homestay yet. Add your homestay below:</p>\n//             <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\n//               <input type=\"text\" name=\"name\" placeholder=\"Homestay Name\" className=\"w-full border p-2 rounded\" value={formData.name} onChange={handleChange} required />\n//               <textarea name=\"description\" placeholder=\"Description\" className=\"w-full border p-2 rounded\" value={formData.description} onChange={handleChange} required />\n//               <input type=\"text\" name=\"facilities\" placeholder=\"Facilities (comma-separated)\" className=\"w-full border p-2 rounded\" value={formData.facilities} onChange={handleChange} required />\n              \n//             {/* Multi-Date Availability Selection */}\n//             <div>\n//               <label className=\"block text-gray-700 font-semibold\">Availability Dates:</label>\n//               <DatePicker\n//                 selected={null}\n//                 onChange={(date) => {\n//                   if (date) {\n//                     setFormData(prevState => ({\n//                       ...prevState,\n//                       availabilitydate: [...prevState.availabilitydate, date]\n//                     }));\n//                   }\n//                 }}\n//                 dateFormat=\"yyyy-MM-dd\"\n//                 className=\"w-full border p-2 rounded\"\n//                 placeholderText=\"Select available dates\"\n//               />\n\n//               {/* Display Selected Dates */}\n//               <div className=\"mt-2 flex flex-wrap gap-2\">\n//                 {formData.availabilitydate.map((date, index) => (\n//                   <div key={index} className=\"flex items-center bg-gray-200 px-2 py-1 rounded\">\n//                     <span>{date.toISOString().split(\"T\")[0]}</span>\n//                     <button\n//                       type=\"button\"\n//                       className=\"ml-2 text-red-500\"\n//                       onClick={() => removeDate(index)}\n//                     >\n//                       ❌\n//                     </button>\n//                   </div>\n//                 ))}\n//               </div>\n//             </div>\n\n\n//               {/* Location Dropdown */}\n//               <select\n//                 name=\"location\"\n//                 value={formData.location}\n//                 onChange={handleChange}\n//                 className=\"w-full border p-2 rounded\"\n//                 required\n//               >\n//                 <option value=\"\" disabled>Select Dzongkhag</option>\n//                 {dzongkhags.map((dzongkhag, index) => (\n//                   <option key={index} value={dzongkhag}>{dzongkhag}</option>\n//                 ))}\n//               </select>\n\n//               <input type=\"text\" name=\"googlemapurl\" placeholder=\"Google Map URL\" className=\"w-full border p-2 rounded\" value={formData.googlemapurl} onChange={handleChange} required />\n//               <input type=\"text\" name=\"images\" placeholder=\"Image URLs (comma-separated)\" className=\"w-full border p-2 rounded\" value={formData.images} onChange={handleChange} required />\n//               <input type=\"number\" name=\"pricepernight\" placeholder=\"Price per Night (Nu.)\" className=\"w-full border p-2 rounded\" value={formData.pricepernight} onChange={handleChange} required />\n              \n//               <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Add Homestay</button>\n//             </form>\n//           </div>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default Homestay;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { useUser } from \"@clerk/clerk-react\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport Sidebar from \"../../components/Sidebar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst dzongkhags = [\n  \"Bumthang\", \"Chhukha\", \"Dagana\", \"Gasa\", \"Haa\", \"Lhuentse\", \"Mongar\", \n  \"Paro\", \"Pema Gatshel\", \"Punakha\", \"Samdrup Jongkhar\", \"Samtse\", \"Sarpang\",\n  \"Thimphu\", \"Trashi Yangtse\", \"Trashigang\", \"Trongsa\", \"Tsirang\", \"Wangdue Phodrang\", \"Zhemgang\"\n];\n\nfunction Homestay() {\n  const { user } = useUser();\n  const [homestay, setHomestay] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    facilities: \"\",\n    availabilitydate: [],\n    location: \"\",\n    googlemapurl: \"\",\n    images: [], // Store uploaded images\n    pricepernight: \"\",\n  });\n\n  useEffect(() => {\n    if (user) {\n      fetchHomestay();\n    }\n  }, [user]);\n\n  async function fetchHomestay() {\n    setLoading(true);\n    try {\n      const { data: hostData, error: hostError } = await supabase\n        .from(\"host\")\n        .select(\"hostid\")\n        .eq(\"clerkuserid\", user.id)\n        .single();\n\n      if (hostError || !hostData) {\n        console.error(\"Error fetching host ID:\", hostError);\n        setLoading(false);\n        return;\n      }\n\n      const hostId = hostData.hostid;\n\n      const { data, error } = await supabase\n        .from(\"homestay\")\n        .select(\"*\")\n        .eq(\"hostid\", hostId)\n        .single();\n\n      if (error) {\n        console.error(\"Error fetching homestay:\", error);\n      } else {\n        console.log(\"Fetched homestay:\", data);\n        setHomestay(data);\n        setFormData({\n          name: data.name || \"\",\n          description: data.description || \"\",\n          facilities: data.facilities || \"\",\n          availabilitydate: data.availabilitydate || [],\n          location: data.location || \"\",\n          googlemapurl: data.googlemapurl || \"\",\n          images: data.images || [],\n          pricepernight: data.pricepernight || \"\",\n        });\n      }\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n    }\n    setLoading(false);\n  }\n\n  async function handleImageUpload(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const fileName = `${user.id}-${Date.now()}-${file.name}`; // Unique filename\n    const { data, error } = await supabase.storage\n      .from(\"homestay-images\")\n      .upload(fileName, file);\n\n    if (error) {\n      console.error(\"Error uploading image:\", error);\n      return;\n    }\n\n    const { data: publicUrl } = supabase.storage\n      .from(\"homestay-images\")\n      .getPublicUrl(fileName);\n\n    setFormData(prevState => ({\n      ...prevState,\n      images: [...prevState.images, publicUrl.publicUrl], // Append uploaded image URL\n    }));\n\n    console.log(\"Uploaded Image URL:\", publicUrl.publicUrl);\n  }\n\n  function handleChange(e) {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!user) return;\n\n    const { data: hostData, error: hostError } = await supabase\n      .from(\"host\")\n      .select(\"hostid\")\n      .eq(\"clerkuserid\", user.id)\n      .single();\n\n    if (hostError || !hostData) {\n      console.error(\"Error fetching host ID:\", hostError);\n      return;\n    }\n\n    const hostId = hostData.hostid;\n\n    const { error } = await supabase.from(\"homestay\").insert([\n      {\n        hostid: hostId,\n        name: formData.name,\n        description: formData.description,\n        facilities: formData.facilities,\n        availabilitydate: formData.availabilitydate.map(date => date.toISOString().split(\"T\")[0]),\n        location: formData.location,\n        googlemapurl: formData.googlemapurl,\n        images: formData.images,\n        pricepernight: formData.pricepernight,\n      },\n    ]);\n\n    if (error) {\n      console.error(\"Error adding homestay:\", error);\n    } else {\n      console.log(\"Homestay added successfully!\");\n      fetchHomestay();\n    }\n  }\n\n  return (\n    <div className=\"flex h-screen\">\n      <Sidebar />\n      <main className=\"flex-1 p-8\">\n        <h2 className=\"text-2xl font-semibold\">Homestay Management</h2>\n\n        {homestay ? (\n          <div className=\"mt-6\">\n            <h3 className=\"text-xl font-semibold\">{homestay.name}</h3>\n            <p className=\"text-gray-600 mt-2\">{homestay.description}</p>\n            <p className=\"text-gray-600 mt-2\"><strong>Facilities:</strong> {homestay.facilities}</p>\n            <p className=\"text-gray-600 mt-2\"><strong>Availability Dates:</strong> {homestay.availabilitydate.join(\", \")}</p>\n            <p className=\"text-gray-600 mt-2\"><strong>Location:</strong> {homestay.location}</p>\n            <p className=\"text-gray-600 mt-2\"><strong>Google Map:</strong> <a href={homestay.googlemapurl} target=\"_blank\" rel=\"noopener noreferrer\">View on Google Maps</a></p>\n            <p className=\"text-gray-600 mt-2\"><strong>Price per Night:</strong> Nu. {homestay.pricepernight}</p>\n            <div className=\"mt-4\">\n              <h4 className=\"text-lg font-semibold\">Images</h4>\n              <div className=\"flex gap-2 mt-2\">\n                {homestay.images.map((img, index) => (\n                  <img key={index} src={img} alt=\"Homestay\" className=\"w-32 h-32 object-cover rounded-lg\" />\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"mt-6\">\n            <p className=\"text-gray-600\">You have not listed any homestay yet. Add your homestay below:</p>\n            <form onSubmit={handleSubmit} className=\"mt-4 space-y-4\">\n              <input type=\"text\" name=\"name\" placeholder=\"Homestay Name\" className=\"w-full border p-2 rounded\" value={formData.name} onChange={handleChange} required />\n              <textarea name=\"description\" placeholder=\"Description\" className=\"w-full border p-2 rounded\" value={formData.description} onChange={handleChange} required />\n              <input type=\"text\" name=\"facilities\" placeholder=\"Facilities\" className=\"w-full border p-2 rounded\" value={formData.facilities} onChange={handleChange} required />\n              <input type=\"file\" onChange={handleImageUpload} className=\"w-full border p-2 rounded\" accept=\"image/*\" />\n              \n              <div className=\"flex gap-2 mt-2\">\n                {formData.images.map((img, index) => (\n                  <img key={index} src={img} alt=\"Homestay\" className=\"w-20 h-20 object-cover rounded-lg\" />\n                ))}\n              </div>\n\n              <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Add Homestay</button>\n            </form>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Homestay;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,OAAOC,OAAO,MAAM,0BAA0B;A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"},"metadata":{},"sourceType":"module","externalDependencies":[]}