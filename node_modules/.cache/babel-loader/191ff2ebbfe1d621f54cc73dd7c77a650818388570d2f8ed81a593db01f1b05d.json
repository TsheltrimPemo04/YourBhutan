{"ast":null,"code":"var _jsxFileName = \"/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/host/HostDashboard.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import { useUser } from \"@clerk/clerk-react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { supabase } from \"../../utils/supabaseClient\"; // Import Supabase client\n// import Sidebar from \"../../components/Sidebar\";\n\n// function HostDashboard() {\n//   const { user, isSignedIn } = useUser();\n//   const navigate = useNavigate();\n//   const [bookings, setBookings] = useState([]);\n\n//   useEffect(() => {\n//     if (!isSignedIn) {\n//       navigate(\"/host/login\");\n//     } else {\n//       fetchBookings();\n//     }\n//   }, [isSignedIn, user]);\n\n// /** Fetch bookings for homestays owned by the logged-in host */\n// async function fetchBookings() {\n//   if (!user) return;\n\n//   try {\n//     // Step 1: Get HostId from the HOST table using ClerkUserId\n//     const { data: hostData, error: hostError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"clerkuserid\", user.id)\n//       .single();\n\n//     if (hostError || !hostData) {\n//       console.error(\"Error fetching host details:\", hostError);\n//       return;\n//     }\n\n//     const hostId = hostData.hostid;\n\n//     // Step 2: Get all HomeStayId's for this host\n//     const { data: homestays, error: homestayError } = await supabase\n//       .from(\"homestay\")\n//       .select(\"homestayid\")\n//       .eq(\"hostid\", hostId);\n\n//     if (homestayError || !homestays || homestays.length === 0) {\n//       console.error(\"No homestays found for this host:\", homestayError);\n//       return;\n//     }\n\n//     const homeStayIds = homestays.map((home) => home.homestayid); // Extract HomeStayId values\n\n//     // Step 3: Get all bookings for these homestays\n//     const { data: bookingsData, error: bookingsError } = await supabase\n//       .from(\"booking\")\n//       .select(\"bookingid,checkin,checkout,adult,children,guestname,guestemail,homestayid,status\")\n//       .in(\"homestayid\", homeStayIds); // Fixing the in() function to accept an array\n\n//     if (bookingsError) {\n//       console.error(\"Error fetching bookings:\", bookingsError);\n//       return;\n//     }\n\n//     setBookings(bookingsData); // Update state with fetched bookings\n//   } catch (error) {\n//     console.error(\"Unexpected error fetching bookings:\", error);\n//   }\n// }\n\n// /** Handle Accepting or Declining a booking */\n// async function handleBookingAction(bookingid, action) {\n//   if (action === \"Accepted\") {\n//     const { error } = await supabase\n//       .from(\"booking\")\n//       .update({ status: \"Accepted\" })\n//       .eq(\"bookingid\", bookingid);\n\n//     if (error) {\n//       console.error(`Error updating booking status: ${error.message}`);\n//     } else {\n//       fetchBookings(); // Refresh bookings after action\n//     }\n//   } else if (action === \"Declined\") {\n//     const { error } = await supabase\n//       .from(\"booking\")\n//       .delete()\n//       .eq(\"bookingid\", bookingid);\n\n//     if (error) {\n//       console.error(`Error deleting booking: ${error.message}`);\n//     } else {\n//       fetchBookings(); // Refresh bookings after action\n//     }\n//   }\n// }\n\n// return (\n//   <div className=\"flex h-screen\">\n//     {/* Sidebar */}\n//     <Sidebar />\n\n//     {/* Main Content */}\n//     <main className=\"flex-1 p-8\">\n//       <div className=\"flex justify-between items-center\">\n//         <h2 className=\"text-2xl font-semibold\">Booking Management</h2>\n//         <div className=\"flex items-center space-x-2\">\n//           <span className=\"font-semibold\">{user?.fullName}</span>\n//         </div>\n//       </div>\n\n//       {/* Booking Table */}\n//       <table className=\"w-full bg-white mt-6 overflow-hidden\">\n//         <thead>\n//           <tr className=\"text-gray-500 text-left border-b\">\n//             <th className=\"py-3 px-4\">Name</th>\n//             <th className=\"py-3 px-4\">Check-in</th>\n//             <th className=\"py-3 px-4\">Check-out</th>\n//             <th className=\"py-3 px-4\">Adults</th>\n//             <th className=\"py-3 px-4\">Children</th>\n//             <th className=\"py-3 px-4\">Action</th>\n//             <th className=\"py-3 px-4\">More Details</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {bookings.map((booking) => (\n//             <tr key={booking.bookingid}>\n//               <td className=\"py-3 px-4\">{booking.guestname}</td>\n//               <td className=\"py-3 px-4\">{booking.checkin}</td>\n//               <td className=\"py-3 px-4\">{booking.checkout}</td>\n//               <td className=\"py-3 px-4\">{booking.adult}</td>\n//               <td className=\"py-3 px-4\">{booking.children}</td>\n//               <td className=\"py-3 px-4\">\n//                 {booking.status === \"Accepted\" ? (\n//                   <span className=\"text-green-600 font-semibold\">Accepted</span>\n//                 ) : (\n//                   <>\n//                     <button \n//                       className=\"bg-[#51CF03] text-white px-3 py-1 rounded-full hover:bg-green-600 mr-2\"\n//                       onClick={() => handleBookingAction(booking.bookingid, \"Accepted\")}\n//                     >\n//                       Accept\n//                     </button>\n//                     <button \n//                       className=\"bg-[#FF6600] text-white px-3 py-1 rounded-full hover:bg-red-600\"\n//                       onClick={() => handleBookingAction(booking.bookingid, \"Declined\")}\n//                     >\n//                       Decline\n//                     </button>\n//                   </>\n//                 )}\n//               </td>\n//               <td className=\"px-4 py-3 underline text-[#6E6E6E]\">\n//                 <Link to={`/host/guestdetails/${booking.bookingid}`}>More Details</Link>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </main>\n//   </div>\n// );\n// }\n\n// export default HostDashboard;\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport Sidebar from \"../../components/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HostDashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchUser() {\n      const {\n        data,\n        error\n      } = await supabase.auth.getUser();\n      if (error || !data.user) {\n        console.error(\"Error fetching user:\", error);\n        navigate(\"/host/login\");\n        return;\n      }\n      setUser(data.user);\n      fetchBookings(data.user.id);\n    }\n    fetchUser();\n  }, []);\n\n  /** Fetch bookings for homestays owned by the logged-in host */\n  async function fetchBookings(userId) {\n    if (!userId) return;\n    try {\n      // Step 1: Get HostId from the HOST table using Supabase user ID\n      const {\n        data: hostData,\n        error: hostError\n      } = await supabase.from(\"host\").select(\"hostid\").eq(\"hostid\", userId).single();\n      if (hostError || !hostData) {\n        console.error(\"Error fetching host details:\", hostError);\n        return;\n      }\n      const hostId = hostData.hostid;\n\n      // Step 2: Get all homestay IDs for this host\n      const {\n        data: homestays,\n        error: homestayError\n      } = await supabase.from(\"homestay\").select(\"homestayid\").eq(\"hostid\", hostId);\n      if (homestayError || !homestays || homestays.length === 0) {\n        console.error(\"No homestays found for this host:\", homestayError);\n        return;\n      }\n      const homeStayIds = homestays.map(home => home.homestayid);\n\n      // Step 3: Get all bookings for these homestays\n      const {\n        data: bookingsData,\n        error: bookingsError\n      } = await supabase.from(\"booking\").select(\"bookingid, checkin, checkout, adult, children, guestname, guestemail, homestayid, status\").in(\"homestayid\", homeStayIds);\n      if (bookingsError) {\n        console.error(\"Error fetching bookings:\", bookingsError);\n        return;\n      }\n      setBookings(bookingsData);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Unexpected error fetching bookings:\", error);\n      setLoading(false);\n    }\n  }\n\n  /** Handle Accepting or Declining a booking */\n  async function handleBookingAction(bookingid, action) {\n    if (action === \"Accepted\") {\n      const {\n        error\n      } = await supabase.from(\"booking\").update({\n        status: \"Accepted\"\n      }).eq(\"bookingid\", bookingid);\n      if (error) {\n        console.error(`Error updating booking status: ${error.message}`);\n      } else {\n        fetchBookings(user.id); // Refresh bookings after action\n      }\n    } else if (action === \"Declined\") {\n      const {\n        error\n      } = await supabase.from(\"booking\").delete().eq(\"bookingid\", bookingid);\n      if (error) {\n        console.error(`Error deleting booking: ${error.message}`);\n      } else {\n        fetchBookings(user.id); // Refresh bookings after action\n      }\n    }\n  }\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold\",\n          children: \"Booking Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full bg-white mt-6 overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-gray-500 text-left border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4\",\n              children: \"Check-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4\",\n              children: \"Check-out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4\",\n              children: \"Adults\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4\",\n              children: \"Children\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4\",\n              children: \"More Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: booking.guestname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: booking.checkin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: booking.checkout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: booking.adult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: booking.children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: booking.status === \"Accepted\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-600 font-semibold\",\n                children: \"Accepted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-[#51CF03] text-white px-3 py-1 rounded-full hover:bg-green-600 mr-2\",\n                  onClick: () => handleBookingAction(booking.bookingid, \"Accepted\"),\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-[#FF6600] text-white px-3 py-1 rounded-full hover:bg-red-600\",\n                  onClick: () => handleBookingAction(booking.bookingid, \"Declined\"),\n                  children: \"Decline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3 underline text-[#6E6E6E]\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/host/guestdetails/${booking.bookingid}`,\n                children: \"More Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, booking.bookingid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(HostDashboard, \"tIxVZh8dmsknNHlrZpCFQwKaXow=\", false, function () {\n  return [useNavigate];\n});\n_c = HostDashboard;\nexport default HostDashboard;\nvar _c;\n$RefreshReg$(_c, \"HostDashboard\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Link","supabase","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","HostDashboard","_s","navigate","user","setUser","bookings","setBookings","loading","setLoading","fetchUser","data","error","auth","getUser","console","fetchBookings","id","userId","hostData","hostError","from","select","eq","single","hostId","hostid","homestays","homestayError","length","homeStayIds","map","home","homestayid","bookingsData","bookingsError","in","handleBookingAction","bookingid","action","update","status","message","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","email","booking","guestname","checkin","checkout","adult","onClick","to","_c","$RefreshReg$"],"sources":["/Users/tsheltrimpemo/Desktop/YourBhutan/src/pages/host/HostDashboard.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import { useUser } from \"@clerk/clerk-react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { supabase } from \"../../utils/supabaseClient\"; // Import Supabase client\n// import Sidebar from \"../../components/Sidebar\";\n\n// function HostDashboard() {\n//   const { user, isSignedIn } = useUser();\n//   const navigate = useNavigate();\n//   const [bookings, setBookings] = useState([]);\n\n//   useEffect(() => {\n//     if (!isSignedIn) {\n//       navigate(\"/host/login\");\n//     } else {\n//       fetchBookings();\n//     }\n//   }, [isSignedIn, user]);\n\n// /** Fetch bookings for homestays owned by the logged-in host */\n// async function fetchBookings() {\n//   if (!user) return;\n\n//   try {\n//     // Step 1: Get HostId from the HOST table using ClerkUserId\n//     const { data: hostData, error: hostError } = await supabase\n//       .from(\"host\")\n//       .select(\"hostid\")\n//       .eq(\"clerkuserid\", user.id)\n//       .single();\n\n//     if (hostError || !hostData) {\n//       console.error(\"Error fetching host details:\", hostError);\n//       return;\n//     }\n\n//     const hostId = hostData.hostid;\n\n//     // Step 2: Get all HomeStayId's for this host\n//     const { data: homestays, error: homestayError } = await supabase\n//       .from(\"homestay\")\n//       .select(\"homestayid\")\n//       .eq(\"hostid\", hostId);\n\n//     if (homestayError || !homestays || homestays.length === 0) {\n//       console.error(\"No homestays found for this host:\", homestayError);\n//       return;\n//     }\n\n//     const homeStayIds = homestays.map((home) => home.homestayid); // Extract HomeStayId values\n\n//     // Step 3: Get all bookings for these homestays\n//     const { data: bookingsData, error: bookingsError } = await supabase\n//       .from(\"booking\")\n//       .select(\"bookingid,checkin,checkout,adult,children,guestname,guestemail,homestayid,status\")\n//       .in(\"homestayid\", homeStayIds); // Fixing the in() function to accept an array\n\n//     if (bookingsError) {\n//       console.error(\"Error fetching bookings:\", bookingsError);\n//       return;\n//     }\n\n//     setBookings(bookingsData); // Update state with fetched bookings\n//   } catch (error) {\n//     console.error(\"Unexpected error fetching bookings:\", error);\n//   }\n// }\n\n// /** Handle Accepting or Declining a booking */\n// async function handleBookingAction(bookingid, action) {\n//   if (action === \"Accepted\") {\n//     const { error } = await supabase\n//       .from(\"booking\")\n//       .update({ status: \"Accepted\" })\n//       .eq(\"bookingid\", bookingid);\n\n//     if (error) {\n//       console.error(`Error updating booking status: ${error.message}`);\n//     } else {\n//       fetchBookings(); // Refresh bookings after action\n//     }\n//   } else if (action === \"Declined\") {\n//     const { error } = await supabase\n//       .from(\"booking\")\n//       .delete()\n//       .eq(\"bookingid\", bookingid);\n\n//     if (error) {\n//       console.error(`Error deleting booking: ${error.message}`);\n//     } else {\n//       fetchBookings(); // Refresh bookings after action\n//     }\n//   }\n// }\n\n// return (\n//   <div className=\"flex h-screen\">\n//     {/* Sidebar */}\n//     <Sidebar />\n\n//     {/* Main Content */}\n//     <main className=\"flex-1 p-8\">\n//       <div className=\"flex justify-between items-center\">\n//         <h2 className=\"text-2xl font-semibold\">Booking Management</h2>\n//         <div className=\"flex items-center space-x-2\">\n//           <span className=\"font-semibold\">{user?.fullName}</span>\n//         </div>\n//       </div>\n\n//       {/* Booking Table */}\n//       <table className=\"w-full bg-white mt-6 overflow-hidden\">\n//         <thead>\n//           <tr className=\"text-gray-500 text-left border-b\">\n//             <th className=\"py-3 px-4\">Name</th>\n//             <th className=\"py-3 px-4\">Check-in</th>\n//             <th className=\"py-3 px-4\">Check-out</th>\n//             <th className=\"py-3 px-4\">Adults</th>\n//             <th className=\"py-3 px-4\">Children</th>\n//             <th className=\"py-3 px-4\">Action</th>\n//             <th className=\"py-3 px-4\">More Details</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {bookings.map((booking) => (\n//             <tr key={booking.bookingid}>\n//               <td className=\"py-3 px-4\">{booking.guestname}</td>\n//               <td className=\"py-3 px-4\">{booking.checkin}</td>\n//               <td className=\"py-3 px-4\">{booking.checkout}</td>\n//               <td className=\"py-3 px-4\">{booking.adult}</td>\n//               <td className=\"py-3 px-4\">{booking.children}</td>\n//               <td className=\"py-3 px-4\">\n//                 {booking.status === \"Accepted\" ? (\n//                   <span className=\"text-green-600 font-semibold\">Accepted</span>\n//                 ) : (\n//                   <>\n//                     <button \n//                       className=\"bg-[#51CF03] text-white px-3 py-1 rounded-full hover:bg-green-600 mr-2\"\n//                       onClick={() => handleBookingAction(booking.bookingid, \"Accepted\")}\n//                     >\n//                       Accept\n//                     </button>\n//                     <button \n//                       className=\"bg-[#FF6600] text-white px-3 py-1 rounded-full hover:bg-red-600\"\n//                       onClick={() => handleBookingAction(booking.bookingid, \"Declined\")}\n//                     >\n//                       Decline\n//                     </button>\n//                   </>\n//                 )}\n//               </td>\n//               <td className=\"px-4 py-3 underline text-[#6E6E6E]\">\n//                 <Link to={`/host/guestdetails/${booking.bookingid}`}>More Details</Link>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </main>\n//   </div>\n// );\n// }\n\n// export default HostDashboard;\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { supabase } from \"../../utils/supabaseClient\";\nimport Sidebar from \"../../components/Sidebar\";\n\nfunction HostDashboard() {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchUser() {\n      const { data, error } = await supabase.auth.getUser();\n      if (error || !data.user) {\n        console.error(\"Error fetching user:\", error);\n        navigate(\"/host/login\");\n        return;\n      }\n\n      setUser(data.user);\n      fetchBookings(data.user.id);\n    }\n\n    fetchUser();\n  }, []);\n\n  /** Fetch bookings for homestays owned by the logged-in host */\n  async function fetchBookings(userId) {\n    if (!userId) return;\n\n    try {\n      // Step 1: Get HostId from the HOST table using Supabase user ID\n      const { data: hostData, error: hostError } = await supabase\n        .from(\"host\")\n        .select(\"hostid\")\n        .eq(\"hostid\", userId)\n        .single();\n\n      if (hostError || !hostData) {\n        console.error(\"Error fetching host details:\", hostError);\n        return;\n      }\n\n      const hostId = hostData.hostid;\n\n      // Step 2: Get all homestay IDs for this host\n      const { data: homestays, error: homestayError } = await supabase\n        .from(\"homestay\")\n        .select(\"homestayid\")\n        .eq(\"hostid\", hostId);\n\n      if (homestayError || !homestays || homestays.length === 0) {\n        console.error(\"No homestays found for this host:\", homestayError);\n        return;\n      }\n\n      const homeStayIds = homestays.map((home) => home.homestayid);\n\n      // Step 3: Get all bookings for these homestays\n      const { data: bookingsData, error: bookingsError } = await supabase\n        .from(\"booking\")\n        .select(\"bookingid, checkin, checkout, adult, children, guestname, guestemail, homestayid, status\")\n        .in(\"homestayid\", homeStayIds);\n\n      if (bookingsError) {\n        console.error(\"Error fetching bookings:\", bookingsError);\n        return;\n      }\n\n      setBookings(bookingsData);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Unexpected error fetching bookings:\", error);\n      setLoading(false);\n    }\n  }\n\n  /** Handle Accepting or Declining a booking */\n  async function handleBookingAction(bookingid, action) {\n    if (action === \"Accepted\") {\n      const { error } = await supabase\n        .from(\"booking\")\n        .update({ status: \"Accepted\" })\n        .eq(\"bookingid\", bookingid);\n\n      if (error) {\n        console.error(`Error updating booking status: ${error.message}`);\n      } else {\n        fetchBookings(user.id); // Refresh bookings after action\n      }\n    } else if (action === \"Declined\") {\n      const { error } = await supabase\n        .from(\"booking\")\n        .delete()\n        .eq(\"bookingid\", bookingid);\n\n      if (error) {\n        console.error(`Error deleting booking: ${error.message}`);\n      } else {\n        fetchBookings(user.id); // Refresh bookings after action\n      }\n    }\n  }\n\n  if (loading) return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n\n  return (\n    <div className=\"flex h-screen\">\n      {/* Sidebar */}\n      <Sidebar />\n\n      {/* Main Content */}\n      <main className=\"flex-1 p-8\">\n        <div className=\"flex justify-between items-center\">\n          <h2 className=\"text-2xl font-semibold\">Booking Management</h2>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"font-semibold\">{user?.email}</span>\n          </div>\n        </div>\n\n        {/* Booking Table */}\n        <table className=\"w-full bg-white mt-6 overflow-hidden\">\n          <thead>\n            <tr className=\"text-gray-500 text-left border-b\">\n              <th className=\"py-3 px-4\">Name</th>\n              <th className=\"py-3 px-4\">Check-in</th>\n              <th className=\"py-3 px-4\">Check-out</th>\n              <th className=\"py-3 px-4\">Adults</th>\n              <th className=\"py-3 px-4\">Children</th>\n              <th className=\"py-3 px-4\">Action</th>\n              <th className=\"py-3 px-4\">More Details</th>\n            </tr>\n          </thead>\n          <tbody>\n            {bookings.map((booking) => (\n              <tr key={booking.bookingid}>\n                <td className=\"py-3 px-4\">{booking.guestname}</td>\n                <td className=\"py-3 px-4\">{booking.checkin}</td>\n                <td className=\"py-3 px-4\">{booking.checkout}</td>\n                <td className=\"py-3 px-4\">{booking.adult}</td>\n                <td className=\"py-3 px-4\">{booking.children}</td>\n                <td className=\"py-3 px-4\">\n                  {booking.status === \"Accepted\" ? (\n                    <span className=\"text-green-600 font-semibold\">Accepted</span>\n                  ) : (\n                    <>\n                      <button \n                        className=\"bg-[#51CF03] text-white px-3 py-1 rounded-full hover:bg-green-600 mr-2\"\n                        onClick={() => handleBookingAction(booking.bookingid, \"Accepted\")}\n                      >\n                        Accept\n                      </button>\n                      <button \n                        className=\"bg-[#FF6600] text-white px-3 py-1 rounded-full hover:bg-red-600\"\n                        onClick={() => handleBookingAction(booking.bookingid, \"Declined\")}\n                      >\n                        Decline\n                      </button>\n                    </>\n                  )}\n                </td>\n                <td className=\"px-4 py-3 underline text-[#6E6E6E]\">\n                  <Link to={`/host/guestdetails/${booking.bookingid}`}>More Details</Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    </div>\n  );\n}\n\nexport default HostDashboard;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,OAAOC,OAAO,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}